[{"content":"High Ping Network\u0026rsquo;s ASN Got! High Ping Network 的 AS Number 为 AS215575\nWe 我们是一个 11 人的小团队，在 Telegram 相识，想共同在互联网上留下自己来过的足迹🐾\nThank you! 非常感谢在我们踏下脚印的那一刻帮助过我们的人\nzhnet \u0026ndash; 我们的公司代注册以及 Lir。与 zhnet 的合作尽管有些小插曲，但是我们还是非常感谢他们对我们的帮助 我们的 IP Ranges 目前，我们只有 IPv6 (说白了就是没钱买 IPv4\n我们的 IPv6 Ranges 为 2a0f:7803:fb20::/44\n可能大家不是很理解 /44 是一个什么数量级别\n起-始: 2a0f:7803:fb20:0000:0000:0000:0000:0000-2a0f:7803:fb2f:ffff:ffff:ffff:ffff:ffff CIDR: 2a0f:7803:fb20::/44 总计 IP 数量: 19,342,813,113,834,066,795,298,816个可用 IPv6 地址 用人话来说，就是约有 19 亿亿亿个 IPv6，用十辈子都用不完（\n我们的分配 (将一个 /44 平均分成 16 等份，每份为 /48，剩余5个为备用段):\n2a0f:7803:fb20::/48 \u0026ndash; @rtx ςαΤ 2a0f:7803:fb21::/48 \u0026ndash; @sam 2a0f:7803:fb22::/48 \u0026ndash; @UniOreoX 2a0f:7803:fb23::/48 \u0026ndash; 2a0f:7803:fb24::/48 \u0026ndash; @GenshinMinecraft 2a0f:7803:fb25::/48 \u0026ndash; @Lemonawa 2a0f:7803:fb26::/48 \u0026ndash; 2a0f:7803:fb27::/48 \u0026ndash; 2a0f:7803:fb28::/48 \u0026ndash; 2a0f:7803:fb29::/48 \u0026ndash; 2a0f:7803:fb2a::/48 \u0026ndash; 2a0f:7803:fb2b::/48 \u0026ndash; @HighPingKat 2a0f:7803:fb2c::/48 \u0026ndash; @re:NoAries 2a0f:7803:fb2d::/48 \u0026ndash; 2a0f:7803:fb2e::/48 \u0026ndash; 2a0f:7803:fb2f::/48 \u0026ndash; @Mio 关于我们的信息 关于我们: https://highp.ing/aboutus.html 我们的官网: https://highp.ing 我们的博客: https://blog.highp.ing 我们的官方邮箱: noc@highp.ing 我们的投诉邮箱: abuse@highp.ing 我们的 Telegram 频道: @HighPingNetwork 我们的 Telegram 群组: @HighPingChat Love 我们因热爱互联网而走到一起，可能我们的出现并不会在互联网激起什么水花，但我们仍乐在其中\nQ\u0026amp;A Q: 为什么要整一个 ASN? A: 在之前，我们初次接触到了 DN42 网络，但是觉得在这样一个小众的圈子内不怎么好玩，所以产生了一个大胆的想法，那就是 整一个ASN!\nQ: 将来这个 ASN 会用来干什么?\nA: 这个问题\u0026hellip;我们也许没有答案。由于我们的 IP 段是平均分给每一位成员的，所以只要不违反道德以及法律底线，我们都可以接受。\nQ: ASN 的花费?\nA: 从头到尾，我们在该 ASN 上约花费了 700CNY，包括了 zhnet 的公司代注册以及 Lir，还有一个域名 highp.ing。加起来还有剩余，所以你可以看到，一个 ASN 也不是那么的贵。\nDN42 我们是从 DN42 出来的，当然欢迎来 DN42 Peer\n我们有一部分的人有自己的 DN42 ASN:\nGenshinMinecraft: AS4242421304 sam: AS4242422503 Mio: AS4242422406 rtx ςαΤ: AS4242423608 如果您想要与我们在 DN42 中 Peer，可以通过上方的链接找到我们!\nOpen-Source 我们热爱开源，从我们网站大致就可以看出\n同时非常感谢为开源项目做出贡献的每一位开源人！\n官网 https://highp.ing : Vitepress 博客 https://blog.highp.ing : Hugo 也非常感谢为我们提供免费服务的每一个服务商/人\nCloudflare: 提供了 Cloudflare Pages 等服务支撑我们官网以及博客的搭建，同时 DNS、CDN 等服务都极度依赖于 Cloudflare 虚妄猫: 提供了面向中国大陆的博客托管免费虚拟主机 https://nomao.blog.highp.ing Github: 提供了 Git 托管服务，为我们的编辑以及项目开发提供了基础平台 小结 不知道你发现了吗，本文大标题的几个英文单词连起来成了一个句子\nWE LOVE OPEN-SOURCE\n这句话，出自于 Arduino。如果你曾经买过 Arduino 的开发板，那你应该会发现开发板的盒子上都会印着这句话。这句话也是我们某位成员的座右铭\n我们因热爱互联网而走到一起，可能我们的出现并不会在互联网激起什么水花，但我们仍乐在其中\n正如 《我家跨上了“信息高速路”》 那篇课文，我们这一次是真正地跨上了 信息高速路\n它就像一个遍布全球的巨大蜘蛛网，把每一个国家、每一个城市甚至每一个家庭连接到一起。\n我们没有那么远大的理想将全世界都连接到一起，但是我们可以让我们自身于朋友连接在一起，That enough!\n","date":"2024-02-05T00:00:00Z","image":"https://blog.highp.ing/p/ourasn/466f79e8ly1fw5ohcs2vfj21380rsqmg_huc4356c5dc91c908c54036cde78cdf035_729873_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ourasn/","title":"High Ping Network's ASN Got!"},{"content":"仅依靠 CloudFlare 完成带路径参数重定向 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 本博文会十分短，因为比较简单而且也是随手一记。\n做到的效果大约是: 中国大陆用户访问 https://blog.highp.ing/xxx/xxxx 时会被 CloudFlare 在边缘重定向到 https://nomao.blog.highp.ing/xxx/xxxx\n不论 URL 中的 目录/请求参数 是什么，都可以一并转发到目标网站\n整个过程是为了让中国大陆访问者更快访问，且不影响浏览体验，无感302\nPowered By CloudFlare\n配置 Step 1 转到 https://dash.cloudflare.com\n进入侧边栏的 规则-重定向规则\nStep 2 点击 创建规则\n为你的规则起一个名字\nStep 3 其中，如果...-当传入请求匹配时... 根据需要写入规则的前提\n比如我的就是检测 中国大陆 的请求，其表达式为: (ip.geoip.country eq \u0026quot;CN\u0026quot;)\n则...-URL 重定向 中，类型选择 动态，表达式这样写:\nconcat(\u0026quot;https://nomao.blog.highp.ing\u0026quot;, http.request.uri.path)\n其中，https://nomao.blog.highp.ing 需要替换为你的重定向后的域名\n状态代码 301 与 302 均可，差别只是一个是永久重定向一个是临时重定向\n记得勾选上 保留查询字符串\nEnjoy it! 保存并部署上面的重定向规则，测试完成后就差不多了！\n本博客 在 中国大陆 地区访问会跳转到 https://nomao.blog.highp.ing\n","date":"2024-02-05T00:00:00Z","image":"https://blog.highp.ing/p/cf302/kS4EzZ3v7gNHWJG_huddee8d4853eae2dac09114992a9b0569_224618_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/cf302/","title":"仅依靠 CloudFlare 完成带路径参数重定向"},{"content":"Rackdog 冷门商家 澳大利亚 $3 1C512M 测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n商家简介： 官网 注：此为小时计费网站，非月付网站\n该商家主要经营按小时计费服务器，最低配置1c512m 3$\n无限流量@10Gbps（不论高低配）\n但是到国内线路拉跨，不建议作为 直连node/建站机\n支付方式：credit card\n测评 脚本为 https://github.com/spiritLHLS/ecs/\n测评区域为 新出的澳大利亚\nIP：162.250.99.5\n基本信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : Intel Xeon Processor (Skylake, IBRS) CPU 核心数 : 1 CPU 频率 : 2699.998 MHz CPU 缓存 : L1: 64.00 KB / L2: 4.00 MB / L3: 16.00 MB 硬盘空间 : 1.17 GiB / 19.52 GiB 启动盘路径 : /dev/vda1 内存 : 129.72 MiB / 473.34 MiB Swap : [ no swap partition or swap file detected ] 系统在线时间 : 0 days, 0 hour 7 min 负载 : 0.07, 0.05, 0.01 系统 : Debian GNU/Linux 11 (bullseye) (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ❌ Disabled 架构 : x86_64 (64 Bit) 内核 : 5.10.0-20-amd64 TCP加速方式 : cubic 虚拟化架构 : KVM NAT类型 : 独立映射,独立过滤,不支持回环 IPV4 ASN : AS142617 Rackdog LLC IPV4 位置 : Sydney / New South Wales / AU CPU \u0026amp;\u0026amp; RAM \u0026amp;\u0026amp; Disk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ----------------------CPU测试--通过sysbench测试------------------------- -\u0026gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(单核)得分: 1176 Scores ---------------------内存测试--感谢lemonbench开源----------------------- -\u0026gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试: 22873.12 MB/s 单线程写测试: 16333.93 MB/s ------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -\u0026gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作 写速度 读速度 100MB-4K Block 7.8 MB/s (1898 IOPS, 13.49s) 16.1 MB/s (3920 IOPS, 6.53s) 1GB-1M Block 199 MB/s (190 IOPS, 5.27s) 347 MB/s (330 IOPS, 3.02s) ---------------------磁盘fio读写测试--感谢yabs开源---------------------- Block Size | 4k (IOPS) | 64k (IOPS) ------ | --- ---- | ---- ---- Read | 99.09 MB/s (24.7k) | 794.39 MB/s (12.4k) Write | 99.35 MB/s (24.8k) | 798.57 MB/s (12.4k) Total | 198.45 MB/s (49.6k) | 1.59 GB/s (24.8k) | | Block Size | 512k (IOPS) | 1m (IOPS) ------ | --- ---- | ---- ---- Read | 775.58 MB/s (1.5k) | 769.94 MB/s (751) Write | 816.78 MB/s (1.5k) | 821.22 MB/s (801) Total | 1.59 GB/s (3.1k) | 1.59 GB/s (1.5k) 流媒体 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ---------------------流媒体解锁--感谢sjlleo开源------------------------- 以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用 ----------------Youtube---------------- [IPv4] 连接方式: Youtube Video Server 视频缓存节点地域: 澳大利亚 墨尔本(MEL05S03) Youtube识别地域: 澳大利亚(AU) ----------------Netflix---------------- [IPv4] 您的出口IP可以使用Netflix，但仅可看Netflix自制剧 NF所识别的IP地域信息：澳大利亚 [IPv6] 您的网络可能没有正常配置IPv6，或者没有IPv6网络接入 ---------------DisneyPlus--------------- [IPv4] 当前IPv4出口解锁DisneyPlus 区域：澳大利亚区 解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断 ----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出 ============[ Multination ]============ Dazn: Yes (Region: US) HotStar: No Disney+: Yes (Region: US) Netflix: Yes (Region: AU) YouTube Premium: Yes (Region: AU) Amazon Prime Video: Yes (Region: US) TVBAnywhere+: Yes iQyi Oversea Region: US Viu.com: No YouTube CDN: Melbourne, Vic. Netflix Preferred CDN: Associated with [Vocus] in [Sydney, N.S.W. ] Spotify Registration: No Steam Currency: USD ChatGPT: Yes Bing Region: US Instagram Licensed Audio: Yes ======================================= 以下为IPV6网络测试，若无IPV6网络则无输出 ---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region: 【US】 IP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 -------------------欺诈分数以及IP质量检测--本脚本原创------------------- 数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对 以下为各数据库编号，输出结果后将自带数据库来源对应的编号 ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: 使用类型(usage_type):business① Data Center/Web Hosting/Transit⑤ business⑧ business⑨ 公司类型(company_type):business① hosting⑧ 云服务提供商(cloud_provider): Yes⑧ 数据中心(datacenter): No⑥ ⑨ 移动网络(mobile): No⑥ 代理(proxy): No① ② ⑥ ⑦ ⑧ ⑨ VPN(vpn): No① ② ⑦ ⑧ TOR(tor): No① ② ⑦ ⑧ ⑨ TOR出口(tor_exit): No⑧ 搜索引擎机器人(search_engine_robot):② 匿名代理(anonymous): No⑦ ⑧ ⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No① ⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ Google搜索可行性：YES 端口25检测: 本地: No 163邮箱: Yes gmail邮箱: Yes outlook邮箱: Yes qq邮箱: Yes yandex邮箱: Yes Traces 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 ----------------三网回程--感谢zhanghanyun/backtrace开源----------------- 国家: AU 城市: Sydney 服务商: AS142617 Rackdog LLC 北京电信 219.141.136.12 测试超时 北京联通 202.106.50.1 测试超时 北京移动 221.179.155.161 移动CMI [普通线路] 上海电信 202.96.209.133 电信163 [普通线路] 上海联通 210.22.97.1 测试超时 上海移动 211.136.112.200 移动CMI [普通线路] 广州电信 58.60.188.222 测试超时 广州联通 210.21.196.6 测试超时 广州移动 120.196.165.24 移动CMI [普通线路] 成都电信 61.139.2.69 电信163 [普通线路] 成都联通 119.6.6.6 联通4837[普通线路] 成都移动 211.137.96.205 移动CMI [普通线路] ---------------------回程路由--感谢fscarmen开源及PR--------------------- 依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉! 广州电信 58.60.188.222 0.38 ms * 局域网 0.27 ms * 局域网 1.47 ms AS4826 澳大利亚, 新南威尔士州, 悉尼, vocus.com.au 267.95 ms AS3356 美国, 加利福尼亚州, 圣何塞, level3.com 376.40 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 375.20 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 广州联通 210.21.196.6 0.29 ms * 局域网 0.37 ms * 局域网 1.73 ms AS4826 澳大利亚, 新南威尔士州, 悉尼, vocus.com.au 93.84 ms * 澳大利亚, 新南威尔士州, 悉尼, nextgengroup.com.au 93.93 ms * 澳大利亚, 西澳大利亚州, 珀斯, nextgengroup.com.au 93.58 ms * 澳大利亚, 西澳大利亚州, 珀斯, nextgengroup.com.au 103.38 ms AS4826 新加坡, vocus.com.au 93.48 ms AS5511 ORANGE.COM 骨干网, orange.com 479.69 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 广州移动 120.196.165.24 0.26 ms * 局域网 0.41 ms * 局域网 1.64 ms AS4826 澳大利亚, 新南威尔士州, 悉尼, vocus.com.au 1.49 ms AS4826 澳大利亚, 新南威尔士州, 悉尼, vocus.com.au 1.78 ms AS58453 澳大利亚, 新南威尔士州, 悉尼, chinamobile.com, 移动 93.33 ms AS58453 澳大利亚, 新南威尔士州, 悉尼, chinamobile.com, 移动 93.15 ms AS58453 新加坡, chinamobile.com, 移动 130.48 ms AS58453 中国, 广东, 广州, chinamobile.com, 移动 130.51 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 128.31 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 131.78 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 133.69 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 135.78 ms AS56040 中国, 广东, 深圳, chinamobile.com, 移动 Speedtest 1 2 3 4 5 6 7 8 9 --------------------自动更新测速节点列表--本脚本原创-------------------- 位置 上传速度 下载速度 延迟 丢包率 Speedtest.net 18.77 Mbps 577.23 Mbps 201.22 0.3% 新加坡 562.38 Mbps 662.27 Mbps 89.87 NULL 洛杉矶 627.88 Mbps 5281.29 Mbps 149.21 0.0% 联通Fuzhou 132.65 Mbps 553.06 Mbps 448.51 0.0% 电信天津5G 1.51 Mbps 9.69 Mbps 363.74 3.3% 移动Chengdu 899.33 Mbps 598.88 Mbps 179.56 0.0% 移动陕西5G 344.63 Mbps 559.43 Mbps 180.17 0.0% 评价 很离谱，很离谱，这分明就是一台 披着 AU 外皮的美国机器！\nIpinfo 数据为 AU，但是你可以从 Speedtest 看出，Au(Speedtest.net) 的速度才500Mbps，而美国洛杉矶为整整 5Gbps\n一看就是拨出去的，IP 库都没更新完全，流媒体解锁是 Au 夹着 Us\nCPU 和内存啥的不想说了，差不多，都是正常小鸡标准\n","date":"2024-01-30T00:00:00Z","image":"https://blog.highp.ing/p/ceping-rackdogau/4Dvs6WLGZi83KwQ_hufbe9b55647ae2a5f0c5544f2f1072e66_165846_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ceping-rackdogau/","title":"Rackdog 冷门商家 澳大利亚 $3 1C512M 测评"},{"content":"OpenAI 测评 本文由 High Ping Network 的小伙伴 sam 进行编撰，首发于 Sam博客\n引言 作为2023年的爆炸性事件，Openai这家公司可以说是改变了世界。虽然网络上已经有很多对他们的模型进行了试用和测评的文章，但是经过博主的深度尝试，为大家带来这篇测评\n注意事项 / Notice Openai公司是不对中国（除台湾）提供服务的。\n但是估计能看到这个的人都是有能力用到的\n本文使用了大量来自GPT的回答作为Example，可能略显冗长，介意的朋友可以前往B站或其他平台寻找测评。\n正文 文本生成 英语能力 作为一个英语国家的公司，他的英语文本生成能力毋庸置疑，不管是3.5还是4都具有很好的表现力 以下是一个高中作文题作为示例，各位可以看看：\nQ:\n假定你是李华。你校英文报就\u0026quot;你是否赞成将业余时间用于参加非学科类校外培训（non-academic extracurricular training)\u0026ldquo;的话题向全校学生征稿。请你用英文写一篇文章投稿，内容包括：1．你的观点：2．简要说明理由。\nCHAT-GPT 3.5：\nA:\nShould You Spend Your Spare Time on Non-Academic Extracurricular Training?\nAs a student, I firmly believe that engaging in non-academic extracurricular training during spare time is beneficial for personal growth and development. There are several reasons why I hold this viewpoint.\nFirstly, such activities offer opportunities to explore and develop interests beyond the confines of the traditional academic curriculum. While academic studies are undoubtedly important, they often focus on specific subjects and may not cater to individual interests or talents. Non-academic extracurricular training, on the other hand, allows students to pursue diverse passions such as sports, arts, music, or vocational skills. This not only enriches their overall learning experience but also helps them discover their strengths and talents.\nSecondly, participating in non-academic extracurricular activities fosters holistic development by nurturing various skills and qualities essential for success in life. Whether it\u0026rsquo;s teamwork, leadership, time management, or creativity, these activities provide a platform for students to hone a wide range of soft skills that are invaluable in both personal and professional spheres. Moreover, involvement in such training can instill qualities like discipline, perseverance, and resilience, which are crucial for overcoming challenges and achieving goals in any field.\nFurthermore, engaging in non-academic extracurricular training promotes a healthy work-life balance. While academic pursuits are undoubtedly important, excessive focus on studies alone can lead to burnout and hinder overall well-being. Participating in activities outside the academic realm provides students with a much-needed break from their routine studies, allowing them to recharge and rejuvenate their minds. This balance not only enhances academic performance but also contributes to overall happiness and satisfaction.\nIn conclusion, I believe that dedicating spare time to non-academic extracurricular training is highly beneficial for students. It not only broadens their horizons and cultivates diverse skills but also promotes a balanced and fulfilling lifestyle. Therefore, I encourage my fellow students to seize the opportunities offered by such activities and make the most of their spare time for personal growth and development.\nSincerely,\nLi Hua\n可以看到他非常优雅的使用了总分总的结构，并且使用了大量的高级但属于正常范畴的词汇。 这很议论文\n中文能力 但是对于中文能力，GPT就有点回天乏术了，同样我们使用一篇高中作文作为示例\nQ:\n《现代汉语词典》：榜样是作为仿效的人或事例（多指好的）。\n在生活中，有人认为榜样的价值就在于可以复制，也有人对此说法不以为然。\n对此争议，你怎么看？请写一篇议论文，谈谈你的思考。字数800字\nCHAT-GPT 3.5：\nA:\n榜样的重要性与争议\n榜样，作为一种社会文化现象，在塑造个体行为和价值观方面起着重要作用。《现代汉语词典》将其定义为作为仿效的人或事例，尤其是好的榜样。然而，在现实生活中，对榜样的价值和作用存在着争议。一些人认为榜样的意义在于可以复制，而另一些人则持不同意见。本文将探讨榜样的重要性及其争议，以及我个人的看法。\n首先，让我们探讨榜样的积极价值。榜样可以激励人们向更高的目标努力。当一个人看到身边的榜样取得成功，展现出良好的品德和行为，他们会受到启发，产生对自身能力和潜力的信心，从而激发内在动力，追求自己的目标。此外，榜样还可以为人们树立正确的道德观念和行为准则。通过观察他人的行为，学习他们的优点和成功经验，人们可以提升自己的道德素养，形成正确的行为模式，使社会更加和谐。\n然而，榜样的复制并非总是积极的。一些人可能过度模仿榜样，失去了自己的个性和创造力。他们可能盲目地模仿他人，而不是根据自己的情况和能力制定适合自己的目标和计划。此外，榜样并非都是完美的，他们也会犯错和犯错。如果盲目模仿榜样，可能会重复他们的错误，造成不良后果。因此，盲目模仿榜样并不总是一个好主意。\n对于榜样的争议，我认为关键在于如何正确地对待和利用榜样。首先，我们应该明确榜样的作用，将其作为一种借鉴和启发的资源，而不是盲目模仿。我们应该学会从榜样的成功经验中汲取经验教训，根据自己的情况和能力制定适合自己的发展路径。其次，我们应该理性地对待榜样，不将其神化或过分理想化。我们应该意识到榜样也是普通人，他们也有自己的局限性和缺点。因此，我们应该学会从榜样的优点和成功经验中学习，同时也要理性地对待他们的缺点和错误。\n综上所述，榜样在塑造个体行为和价值观方面具有重要作用，但其作用和价值存在争议。正确地对待和利用榜样，可以为个体的成长和发展提供有益的借鉴和启发。因此，我们应该理性地对待榜样，不盲目模仿，同时也不过分理想化，以实现个体的自我发展和社会的和谐稳定。\nCHAT-GPT 4：\nA:\n榜样的价值：借鉴与超越\n榜样，作为一种仿效的人或事例，一直以来都备受争议。有人认为榜样的价值在于可以复制，而另一些人则对此说法不以为然。然而，我认为榜样的真正价值在于可以供他人借鉴并超越。在生活中，榜样的存在可以激发人们的积极向上的动力，帮助我们树立正确的价值观和行为准则，发现自己的潜力和可能性，促进社会的进步和发展。\n榜样可以激发人们的积极向上的动力。当我们看到别人取得了成功，我们会被他们的努力和成就所鼓舞。例如，历史上的杰出人物马克思，他的思想和理论对世界产生了深远的影响。通过模仿榜样的行为和思维方式，我们可以学习到他们的成功经验，并将其应用到自己的生活中。这样，我们可以更加努力地追求自己的目标。\n榜样可以帮助我们树立正确的价值观和行为准则。优秀的榜样往往具备良好的品德和道德观念。例如，历史上的圣雄甘地，他以非暴力和和平抵抗的方式领导印度独立运动，成为全世界的榜样。通过学习他们的行为和价值观，我们可以更好地认识到什么是正确的，什么是值得追求的。这种学习不仅可以指导我们的行为，还可以塑造我们的人格，使我们成为更好的人。\n榜样还可以帮助我们发现自己的潜力和可能性。当我们看到别人取得了成功，我们会意识到自己也有可能达到同样的成就。例如，历史上的爱因斯坦，他的理论革命了物理学的发展，成为科学界的榜样。榜样的存在让我们相信，只要我们付出努力，我们也可以取得成功。这种信念可以激发我们的自信心，让我们敢于追求自己的梦想，并发掘自己的潜力。\n榜样的存在可以促进社会的进步和发展。当一个人成为榜样，他的成功不仅仅是个人的成就，还可以影响和激励更多的人。例如，历史上的罗斯福总统，他的领导力和改革精神推动了美国的经济复苏和社会进步。这种影响力可以传递给更多的人，形成良好的社会风气和价值观。通过榜样的力量，社会可以不断进步，人们可以共同追求更高的目标。\n综上所述，榜样的价值在于可以供他人借鉴并超越。榜样可以激发人们的积极向上的动力，帮助我们树立正确的价值观和行为准则，发现自己的潜力和可能性，促进社会的进步和发展。因此，我们应该积极地寻找和学习榜样，并将他们的经验和智慧应用到自己的生活中。这样，我们才能不断进步，成为更好的自己。\n我们可以看到作为Openai公司的最牛模型，GPT-4的文章明显优于3.5，他使用了真实世界中的例子，而不仅仅是干巴巴的说话。但是俩个模型都存在一定的问题。尽管他们都使用了标准的总分总结构来写这篇议论文，但是他们的论述都不太与生活沾边，而且意义升华的太快没有合格的铺垫，基本为：个人-社会。这样子的跳跃太快并不符合议论文所需。\n不过拿来水水寒假暑假作业的GPT-4还是够用了\n代码能力 代码生成能力 作为引爆互联网的时代顶流，他的代码生成能力非常不错。常用语言基本上他都能非常好的给出代码，尽管有时候代码不能运行，但是你把报错丢给他，他都能非常好的修复\n以下是一些语言的范例（模型均为3.5）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 import socket import threading import base64 import markdown2 import emoji # 创建 socket 对象 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 绑定 IP 和端口 server_socket.bind((\u0026#39;0.0.0.0\u0026#39;, 5555)) # 监听连接 server_socket.listen() # 存储连接的客户端和对应的地址 clients = {} addresses = {} # 发送消息给指定客户端 def send_to_client(message, client_socket): try: client_socket.send(message) except: pass # 广播消息给所有客户端 def broadcast(message, client_socket=None): for client in clients: if client != client_socket: try: client.send(message) except: remove_client(client) # 移除断开连接的客户端 def remove_client(client_socket): addr = clients[client_socket] del clients[client_socket] del addresses[str(addr)] broadcast(f\u0026#34;Client {addr} has left the chat.\u0026#34;) # 处理客户端的消息 def handle_client(client_socket, addr): while True: try: message = client_socket.recv(1024) if not message: break decoded_message = base64.b64decode(message).decode() # 判断消息类型并处理 if decoded_message.startswith(\u0026#34;/p2p \u0026#34;): target_addr, message_content = decoded_message[len(\u0026#34;/p2p \u0026#34;):].split(\u0026#34;: \u0026#34;, 1) if target_addr in addresses: target_socket = addresses[target_addr] send_to_client(message, target_socket) else: client_socket.send(f\u0026#34;Client {target_addr} not found.\u0026#34;.encode()) elif decoded_message.startswith(\u0026#34;/broadcast \u0026#34;): broadcast_message_content = decoded_message[len(\u0026#34;/broadcast \u0026#34;):] broadcast_message = f\u0026#34;Broadcast from {addr}: {broadcast_message_content}\u0026#34; broadcast(base64.b64encode(broadcast_message.encode()), client_socket) else: broadcast_message = f\u0026#34;{addr}: {emoji.emojize(markdown2.markdown(decoded_message))}\u0026#34; # 使用emoji库 broadcast(base64.b64encode(broadcast_message.encode()), client_socket) except: remove_client(client_socket) break # 接受客户端连接 while True: client_socket, addr = server_socket.accept() clients[client_socket] = addr addresses[str(addr)] = client_socket broadcast(f\u0026#34;Client {addr} has joined the chat.\u0026#34;) print(f\u0026#34;Connection from {addr}\u0026#34;) # 启动一个新线程来处理客户端 client_thread = threading.Thread(target=handle_client, args=(client_socket, addr)) client_thread.start() 这是一个聊天软件的服务器的实现，我已经将这个软件的全部代码上传到了GitHub仓库，感兴趣的朋友可以去看看。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Chunk Upload\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input type=\u0026#34;file\u0026#34; id=\u0026#34;fileInput\u0026#34;\u0026gt; \u0026lt;button onclick=\u0026#34;uploadFile()\u0026#34;\u0026gt;Upload\u0026lt;/button\u0026gt; \u0026lt;script\u0026gt; function uploadFile() { const fileInput = document.getElementById(\u0026#39;fileInput\u0026#39;); const file = fileInput.files[0]; const chunkSize = 1024 * 1024; // 1MB chunk size const totalChunks = Math.ceil(file.size / chunkSize); let currentChunk = 0; const uploadChunk = () =\u0026gt; { const start = currentChunk * chunkSize; const end = Math.min(start + chunkSize, file.size); const chunk = file.slice(start, end); const formData = new FormData(); formData.append(\u0026#39;file\u0026#39;, chunk); formData.append(\u0026#39;chunk\u0026#39;, currentChunk); formData.append(\u0026#39;totalChunks\u0026#39;, totalChunks); fetch(\u0026#39;upload.php\u0026#39;, { method: \u0026#39;POST\u0026#39;, body: formData }) .then(response =\u0026gt; response.json()) .then(data =\u0026gt; { currentChunk++; if (currentChunk \u0026lt; totalChunks) { uploadChunk(); } else { console.log(\u0026#39;File upload complete\u0026#39;); } }) .catch(error =\u0026gt; { console.error(\u0026#39;Error:\u0026#39;, error); }); }; uploadChunk(); } \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;?php $targetDir = \u0026#39;uploads/\u0026#39;; $fileName = $_FILES[\u0026#39;file\u0026#39;][\u0026#39;name\u0026#39;]; $chunkNumber = $_POST[\u0026#39;chunk\u0026#39;]; $totalChunks = $_POST[\u0026#39;totalChunks\u0026#39;]; $chunkSize = 1024 * 1024; // 1MB chunk size $targetFile = $targetDir . $fileName . \u0026#39;.part\u0026#39; . $chunkNumber; move_uploaded_file($_FILES[\u0026#39;file\u0026#39;][\u0026#39;tmp_name\u0026#39;], $targetFile); if ($chunkNumber == $totalChunks - 1) { // All chunks uploaded, merge them $outputFile = $targetDir . $fileName; $outputStream = fopen($outputFile, \u0026#39;wb\u0026#39;); for ($i = 0; $i \u0026lt; $totalChunks; $i++) { $inputFile = $targetDir . $fileName . \u0026#39;.part\u0026#39; . $i; $inputStream = fopen($inputFile, \u0026#39;rb\u0026#39;); stream_copy_to_stream($inputStream, $outputStream); fclose($inputStream); unlink($inputFile); } fclose($outputStream); echo json_encode([\u0026#39;success\u0026#39; =\u0026gt; true]); } else { echo json_encode([\u0026#39;success\u0026#39; =\u0026gt; false]); } ?\u0026gt; 这是一段网页分段上传文件的代码示例，包括了 PHP+HTML+JavaScript。但是这段代码我并没有进行可用性测试，我并不知道他的可用性。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #!/bin/bash echo \u0026#34;请输入隧道名：\u0026#34; read -r filename echo \u0026#34;请输入你的私钥：\u0026#34; read -r private_key echo \u0026#34;请输入你监听的端口：\u0026#34; read -r listen_port echo \u0026#34;请输入你的dn42 IP：\u0026#34; read -r your_dn42_ip echo \u0026#34;请输入对方的dn42 IP：\u0026#34; read -r peer_dn42_ip echo \u0026#34;请输入对方的公钥：\u0026#34; read -r peer_public_key echo \u0026#34;请输入对方的endpoint：\u0026#34; read -r peer_endpoint content=\u0026#34;[Interface] PrivateKey = $private_key ListenPort = $listen_port PostUp = ip addr add $your_dn42_ip peer $peer_dn42_ip dev %i Table = off [Peer] PublicKey = $peer_public_key Endpoint = $peer_endpoint AllowedIPs = 10.0.0.0/8, 172.20.0.0/14, 172.31.0.0/16, fd00::/8, fe80::/64\u0026#34; echo \u0026#34;$content\u0026#34; | sudo tee \u0026#34;/etc/wireguard/$filename.conf\u0026#34; \u0026gt; /dev/null echo \u0026#34;内容已写入到 /etc/wireguard/$filename.conf 文件中。\u0026#34; sudo systemctl enable \u0026#34;wg-quick@$filename\u0026#34; wg-quick up $filename echo \u0026#34;隧道 $filename 已建立。\u0026#34; wg 这是一段 Shell（也就是俗称的脚本）代码，非常优雅的实现了 WireGuard 的一个隧道建立。\n尽管他的代码不错，但是建议不要应用于大型项目，他的代码能力仍具有一定的局限性，项目大了很容易出问题。\n代码阅读能力 我们使用刚刚的 Python 代码作为例子给 GPT-3.5 让他尝试理解，下面是他的回答：\n这段代码是一个简单的基于 Socket 的聊天服务器。它使用 Python 的 socket 模块来创建服务器，并允许多个客户端连接和发送消息。\n首先，代码导入了一些必要的模块，包括 socket、threading、base64、markdown2 和 emoji。然后，创建了一个服务器 socket 对象，使用 AF_INET 和 SOCK_STREAM 参数来指定使用 IPv4 地址和 TCP 协议。\n接下来，服务器绑定到IP地址 \u0026lsquo;0.0.0.0\u0026rsquo; 和端口号 5555 上，并开始监听连接请求。clients 和 addresses 字典用于存储连接的客户端和对应的地址。\n代码中定义了一些函数和方法来处理客户端的连接和消息。 send_to_client 函数被用于将消息发送给指定的客户端，broadcast 函数被用于将消息广播给所有连接的客户端，remove_client 函数用于移除断开连接的客户端。\nhandle_client 函数是在新线程中启动的，用于处理每个连接的客户端。它通过接收客户端发送的消息，并根据消息的内容进行不同的处理。如果收到的消息以 \u0026ldquo;/p2p \u0026quot; 开头，它会将消息转发给指定的客户端。如果收到的消息以 \u0026ldquo;/broadcast \u0026quot; 开头，它将广播消息给所有客户端。否则，它会将消息以广播形式发送给所有客户端。\n最后，通过一个无限循环来接受客户端的连接，并为每个连接的客户端启动一个新线程来处理。每当有新的客户端连接成功，服务器会广播一个加入聊天室的消息，并打印出连接的信息。\n这段代码简单地演示了一个聊天服务器，但在现实的应用中还需要添加更多的功能和安全性检查。这包括验证客户端发送的消息、处理异常情况以及保护服务器免受恶意攻击。\n我们可以看到，他非常完美的get到了代码的意思，还推测了代码的用途，并给出了安全建议。\n或许这就是他为什么能火罢\n图片生成 本次测试模型为Dell-E-2\n以下为一些测试图片 我们可以看到，图片生成效果大抵还是不错的。 但是作为AI绘图的老毛病，画人和画手多少还是有点大病。特别是人，就像是拼贴画一样，这里一个部件那里一个部件。整个看下来非常的不协调。 总的来说作为生成式的绘图AI他已经非常不错了，完全可以日常使用。只要他不涉及到绘制人像\n总结 作为一个工作助手，Openai提供的服务是完全够用了，语言能力能看，代码能力耐打，图片生成能用。尽管还有不少的进步空间，但是Openai一直在努力。希望他们以后会带来更加震撼的产品。\n番外 你甚至可以用来当作化学实验室使用 是不是还挺好玩 后续会有一篇文章来更新Openai提示词\n","date":"2024-01-28T00:00:00Z","image":"https://blog.highp.ing/p/samopenai/1_5ecJKPe4wDKIJ197h5r3bQ_hueb7575a1ce59d0f2ba59b48cf4127930_9058_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/samopenai/","title":"OpenAI 测评"},{"content":"Wawo 哇沃 4.99rmb LXC HK 小鸡测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n基本信息 CPU: 0.5c Ram: 512mb Disk: 3GB Network: 500G@500Mbps IP: IPv6*1, 出口 Nat IPv4 价格: 4.99RMB/1Y 脚本测试 脚本: ECS\n基本信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : Intel(R) Xeon(R) CPU E5-2695 v2 @ 2.40GHz CPU 核心数 : 48 CPU 频率 : 3200.000 MHz CPU 缓存 : L1: 1.50 MB / L2: 6.00 MB / L3: 60.00 MB 硬盘空间 : 2.89 GiB / 0.00 GiB 启动盘路径 : /dev/almalinux_undefined/vsv2293-dgqUTDcW7y2vtKmS-uoVmWu9kMJLmHXF9 内存 : 66.29 MiB / 768.00 MiB Swap : [ no swap partition or swap file detected ] 系统在线时间 : 0 days, 0 hour 7 min 负载 : 9.93, 8.49, 8.06 系统 : Ubuntu 20.04.1 LTS (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ✔ Enabled 架构 : x86_64 (64 Bit) 内核 : 4.18.0-513.11.1.el8_9.x86_64 TCP加速方式 : bbr 虚拟化架构 : LXC NAT类型 : 独立映射,独立过滤,不支持回环 IPV4 ASN : AS150452 LANDUPS LIMITED IPV4 位置 : Hong Kong / Central and Western / HK CPU \u0026amp; RAM \u0026amp; Disk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ----------------------CPU测试--通过sysbench测试------------------------- -\u0026gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(单核)得分: 664 Scores 48 线程测试(多核)得分: 670 Scores ---------------------内存测试--感谢lemonbench开源----------------------- -\u0026gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试:\t15143.28 MB/s 单线程写测试:\t10807.79 MB/s ------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -\u0026gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作\t写速度\t读速度 100MB-4K Block\t32.4 MB/s (7912 IOPS, 3.24s)\t23.5 MB/s (5744 IOPS, 4.46s) 1GB-1M Block\t339 MB/s (324 IOPS, 3.09s)\t301 MB/s (287 IOPS, 3.48s) ---------------------磁盘fio读写测试--感谢yabs开源---------------------- 测试失败请替换另一种方式 流媒体测试 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 ---------------------流媒体解锁--感谢sjlleo开源------------------------- 以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用 ----------------Youtube---------------- [IPv4] 连接方式: Youtube Video Server 视频缓存节点地域: 中国香港(HKG07S42) Youtube识别地域: 无信息(null) [IPv6] 连接方式: Youtube Video Server 视频缓存节点地域: 中国香港(HKG07S42) Youtube识别地域: 香港(HK) ----------------Netflix---------------- [IPv4] 您的出口IP完整解锁Netflix，支持非自制剧的观看 NF所识别的IP地域信息：香港 [IPv6] 您的出口IP完整解锁Netflix，支持非自制剧的观看 NF所识别的IP地域信息：香港 ---------------DisneyPlus--------------- [IPv4] 当前IPv4出口解锁DisneyPlus 区域：香港区 [IPv6] 当前IPv6出口解锁DisneyPlus 区域：香港区 解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断 ----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出 ============[ Multination ]============ Dazn:\tYes (Region: HK) HotStar:\tNo Disney+:\tYes (Region: HK) Netflix:\tYes (Region: HK) YouTube Premium:\tYes Amazon Prime Video:\tYes (Region: HK) TVBAnywhere+:\tNo iQyi Oversea Region:\tHK Viu.com:\tYes (Region: HK) YouTube CDN:\tHong Kong Netflix Preferred CDN:\tSeattle, WA Spotify Registration:\tNo Steam Currency:\tHKD ChatGPT:\tOnly Available with Mobile APP Bing Region:\tHK Instagram Licensed Audio:\t-\u0026gt; Instagram Licensed Audio:\tNo ======================================= 以下为IPV6网络测试，若无IPV6网络则无输出 ============[ Multination ]============ Dazn:\tFailed (Network Connection) HotStar:\tNo Disney+:\tYes (Region: HK) Netflix:\tYes (Region: HK) YouTube Premium:\tYes (Region: HK) Amazon Prime Video:\tUnsupported TVBAnywhere+:\tFailed (Network Connection) iQyi Oversea Region:\tFailed Viu.com:\tFailed YouTube CDN:\tHong Kong Netflix Preferred CDN:\tSeattle, WA Spotify Registration:\tNo Steam Currency:\tFailed (Network Connection) ChatGPT:\tFailed Bing Region:\tHK Instagram Licensed Audio:\t-\u0026gt; Instagram Licensed Audio:\tNo ======================================= ---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region:\tFailed IP 测试 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 -------------------欺诈分数以及IP质量检测--本脚本原创------------------- 数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对 以下为各数据库编号，输出结果后将自带数据库来源对应的编号 ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: 使用类型(usage_type):business① Commercial⑤ business⑧ business⑨ 公司类型(company_type):hosting① hosting⑧ 云服务提供商(cloud_provider): Yes⑧ 数据中心(datacenter): No⑥ ⑨ 移动网络(mobile): No⑥ 代理(proxy): No① ② ⑥ ⑦ ⑧ ⑨ VPN(vpn): No① ② ⑦ ⑧ TOR(tor): No① ② ⑦ ⑧ ⑨ TOR出口(tor_exit): No⑧ 搜索引擎机器人(search_engine_robot):② 匿名代理(anonymous): No⑦ ⑧ ⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No① ⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ 黑名单记录统计(有多少个黑名单网站有记录): 无害0 恶意0 可疑0 未检测89 ③ Google搜索可行性：YES 端口25检测: 本地: Yes 163邮箱: Yes gmail邮箱: Yes outlook邮箱: Yes yandex邮箱: Yes qq邮箱: Yes ------以下为IPV6检测------ 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: Commercial⑤ Traces 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 ----------------三网回程--感谢zhanghanyun/backtrace开源----------------- 国家: HK 城市: Hong Kong 服务商: AS150452 LANDUPS LIMITED 北京电信 219.141.136.12 电信CN2 [优质线路] 北京联通 202.106.50.1 联通4837[普通线路] 北京移动 221.179.155.161 移动CMI [普通线路] 上海电信 202.96.209.133 电信CN2 [优质线路] 上海联通 210.22.97.1 联通4837[普通线路] 上海移动 211.136.112.200 移动CMI [普通线路] 广州电信 58.60.188.222 电信CN2 [优质线路] 广州联通 210.21.196.6 联通4837[普通线路] 广州移动 120.196.165.24 移动CMI [普通线路] 成都电信 61.139.2.69 电信CN2 [优质线路] 成都联通 119.6.6.6 联通4837[普通线路] 成都移动 211.137.96.205 移动CMI [普通线路] ---------------------回程路由--感谢fscarmen开源及PR--------------------- 依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉! 广州电信 58.60.188.222 216.25 ms AS150452 中国, 香港, landups.com 12.71 ms AS150452 中国, 香港, landups.com 106.12 ms * 局域网 40.42 ms * 局域网 12.09 ms * 局域网 275.94 ms * 局域网 90.61 ms AS24429 中国, 香港, aliyun.com, 阿里云 4.33 ms * 中国, 香港, chinatelecom.com.cn, 电信 3.39 ms * 中国, 香港, chinatelecom.com.cn, 电信 8.47 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信 10.05 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信 11.25 ms * 中国, 广东, 广州, chinatelecom.com.cn, 电信 14.36 ms * 中国, 广东, 深圳, chinatelecom.com.cn, 电信 13.38 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 53.00 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 广州联通 210.21.196.6 58.51 ms AS150452 中国, 香港, landups.com 254.63 ms AS150452 中国, 香港, landups.com 213.25 ms AS150452 中国, 香港, landups.com 158.78 ms * 局域网 174.84 ms * 局域网 1.65 ms * 局域网 1.86 ms * 局域网 3.17 ms AS24429 中国, 香港, aliyun.com, 阿里云 3.84 ms * 中国, 香港, chinaunicom.com, 联通 10.89 ms AS10099 中国, 香港, chinaunicom.com, 联通 3.87 ms AS10099 中国, 香港, chinaunicom.com, 联通 50.79 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通 26.28 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通 13.42 ms AS17816 中国, 广东, 广州, chinaunicom.com, 联通 18.03 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 11.93 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 广州移动 120.196.165.24 0.24 ms AS150452 中国, 香港, landups.com 2.76 ms AS150452 中国, 香港, landups.com 5.33 ms AS150452 中国, 香港, landups.com 0.90 ms * 局域网 1.03 ms * 局域网 1.74 ms * 局域网 1.75 ms * 局域网 3.03 ms AS58453 中国, 香港, chinamobile.com, 移动 8.33 ms AS58453 中国, 广东, 广州, chinamobile.com, 移动 16.71 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 37.77 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 20.41 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 13.29 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 17.47 ms AS56040 中国, 广东, 深圳, chinamobile.com, 移动 测速 1 2 3 4 5 6 7 8 --------------------自动更新测速节点列表--本脚本原创-------------------- 位置\t上传速度\t下载速度\t延迟\t丢包率 Speedtest.net\t296.24 Mbps\t67.75 Mbps\t3.03\t0.0% 中国香港\t339.89 Mbps\t177.59 Mbps\t6.19\tNULL 新加坡\t433.70 Mbps\t287.92 Mbps\t38.01\tNULL 联通海南\t4.54 Mbps\t135.45 Mbps\t171.43\tNULL 电信湖南5G\t19.39 Mbps\t166.48 Mbps\t75.82\t8.0% 电信成都\t225.34 Mbps\t158.61 Mbps\t94.44\t4.4% 评价 毕竟是 5rmb 不到的年付机，将就用就行\n玩具机，最多也是探针加一\n解锁 NF，虽然但是还不错 (?)\n也就那样，猜测之后会有人溢价几块钱收\n","date":"2024-01-28T00:00:00Z","image":"https://blog.highp.ing/p/ceping-499hkv6/obOsYjScKep1VQ7_hu1f77730512f262b9278a781367408387_363662_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ceping-499hkv6/","title":"Wawo 哇沃 4.99rmb/年 LXC HK Ipv6 Nat 小鸡 测评"},{"content":"[测评] Rackdog 冷门商家 美国芝加哥 $3 1C512M 测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n商家简介： 官网 注：此为小时计费网站，非月付网站\n该商家主要经营按小时计费服务器，最低配置1c512m 3$\n无限流量@10Gbps（不论高低配）\n但是到国内线路拉跨，不建议作为 直连node/建站机\n支付方式：credit card\n测评 脚本为 https://github.com/spiritLHLS/ecs/\n测评区域为 Chicago, IL\nIP：158.51.15.26\n基础信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : Intel Xeon Processor (Skylake, IBRS) CPU 核心数 : 1 CPU 频率 : 2700.034 MHz CPU 缓存 : L1: 0.00 KB / L2: 0.00 KB / L3: 0.00 KB 硬盘空间 : 1.33 GiB / 19.20 GiB 启动盘路径 : /dev/vda1 内存 : 123.32 MiB / 480.99 MiB Swap : [ no swap partition or swap file detected ] 系统在线时间 : 0 days, 0 hour 4 min 负载 : 0.27, 0.16, 0.08 系统 : Ubuntu 18.04.6 LTS (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ❌ Disabled 架构 : x86_64 (64 Bit) 内核 : 4.15.0-200-generic TCP加速方式 : cubic 虚拟化架构 : KVM NAT类型 : 独立映射,独立过滤,不支持回环 IPV4 ASN : AS398465 Rackdog, LLC IPV4 位置 : Chicago / Illinois / US CPU \u0026amp; 内存 \u0026amp; 硬盘 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ---------------------CPU测试--感谢lemonbench开源------------------------ -\u0026gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(1核)得分: 1192 Scores ---------------------内存测试--感谢lemonbench开源----------------------- -\u0026gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试:\t22511.40 MB/s 单线程写测试:\t16169.62 MB/s ------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -\u0026gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作\t写速度\t读速度 100MB-4K Block\t6.5 MB/s (1589 IOPS, 16.11s)\t13.7 MB/s (3346 IOPS, 7.65s) 1GB-1M Block\t217 MB/s (207 IOPS, 4.83s)\t324 MB/s (309 IOPS, 3.23s) ---------------------磁盘fio读写测试--感谢yabs开源---------------------- Block Size | 4k (IOPS) | 64k (IOPS) ------ | --- ---- | ---- ---- Read | 100.31 MB/s (25.0k) | 794.39 MB/s (12.4k) Write | 100.58 MB/s (25.1k) | 798.57 MB/s (12.4k) Total | 200.89 MB/s (50.2k) | 1.59 GB/s (24.8k) | | Block Size | 512k (IOPS) | 1m (IOPS) ------ | --- ---- | ---- ---- Read | 775.58 MB/s (1.5k) | 768.48 MB/s (750) Write | 816.78 MB/s (1.5k) | 819.66 MB/s (800) Total | 1.59 GB/s (3.1k) | 1.58 GB/s (1.5k) 解锁检测 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 ---------------------流媒体解锁--感谢sjlleo开源------------------------- 以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用 ----------------Youtube---------------- [IPv4] 连接方式: Youtube Video Server 视频缓存节点地域: ORD(ORD38S25) Youtube识别地域: 加纳(GH) ----------------Netflix---------------- [IPv4] 您的出口IP可以使用Netflix，但仅可看Netflix自制剧 NF所识别的IP地域信息：美国 [IPv6] 您的网络可能没有正常配置IPv6，或者没有IPv6网络接入 ---------------DisneyPlus--------------- [IPv4] 当前IPv4出口解锁DisneyPlus 区域：美国区 解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断 ----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出 ============[ Multination ]============ Dazn:\tYes (Region: US) HotStar:\tYes (Region: US) Disney+:\tNo Netflix:\tOriginals Only YouTube Premium:\tYes (Region: GH) Amazon Prime Video:\tYes (Region: US) TVBAnywhere+:\tYes iQyi Oversea Region:\tUS Viu.com:\tNo YouTube CDN:\tChicago, IL Netflix Preferred CDN:\tAssociated with [Astound Broadband] in [Chicago, IL ] Spotify Registration:\tYes (Region: US) Steam Currency:\tUSD ChatGPT:\tYes Bing Region:\tUS ======================================= 以下为IPV6网络测试，若无IPV6网络则无输出 ---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region:\t【US】 IP检测 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 -------------------欺诈分数以及IP质量检测--本脚本原创------------------- 数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对 以下为各数据库编号，输出结果后将自带数据库来源对应的编号 ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: 使用类型(usage_type):isp① Data Center/Web Hosting/Transit⑤ isp⑧ business⑨ 公司类型(company_type):isp① isp⑧ 云服务提供商(cloud_provider): No⑧ 数据中心(datacenter): No⑥ ⑨ 移动网络(mobile): No⑥ 代理(proxy): No① ② ⑥ ⑦ ⑧ ⑨ ⑩ VPN(vpn): No① ② ⑦ ⑧ TOR(tor): No① ② ⑦ ⑧ ⑨ TOR出口(tor_exit): No⑧ 搜索引擎机器人(search_engine_robot):② 匿名代理(anonymous): No⑦ ⑧ ⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No① ⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ Google搜索可行性：YES 端口25检测: 本地: No 163邮箱: Yes gmail邮箱: Yes outlook邮箱: Yes qq邮箱：No yandex邮箱: Yes TraceRoute 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 ----------------三网回程--感谢zhanghanyun/backtrace开源----------------- 国家: US 城市: Chicago 服务商: AS398465 Rackdog, LLC 北京电信 219.141.136.12 测试超时 北京联通 202.106.50.1 联通4837[普通线路] 北京移动 221.179.155.161 移动CMI [普通线路] 上海电信 202.96.209.133 电信163 [普通线路] 上海联通 210.22.97.1 联通4837[普通线路] 上海移动 211.136.112.200 移动CMI [普通线路] 广州电信 58.60.188.222 电信163 [普通线路] 广州联通 210.21.196.6 联通4837[普通线路] 广州移动 120.196.165.24 移动CMI [普通线路] 成都电信 61.139.2.69 电信163 [普通线路] 成都联通 119.6.6.6 联通4837[普通线路] 成都移动 211.137.96.205 移动CMI [普通线路] ---------------------回程路由--感谢fscarmen开源及PR--------------------- 依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉! 广州电信 58.60.188.222 0.28 ms * 局域网 0.30 ms * 局域网 0.93 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 2.18 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 14.07 ms AS174 美国, 密苏里州, 堪萨斯城, cogentco.com 25.68 ms AS174 美国, 科罗拉多州, 丹佛, cogentco.com 35.70 ms AS174 美国, 犹他州, 盐湖城, cogentco.com 49.93 ms AS174 美国, 加利福尼亚州, 旧金山, cogentco.com 51.33 ms AS174 美国, 加利福尼亚州, 圣何塞, cogentco.com 204.70 ms AS4134 中国, 广东, 广州, chinatelecom.com.cn, 电信 201.28 ms AS4134 中国, 广东, 广州, chinatelecom.com.cn, 电信 201.84 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 209.59 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 广州联通 210.21.196.6 0.28 ms * 局域网 4.29 ms * 局域网 0.90 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 2.52 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 13.99 ms AS174 美国, 密苏里州, 堪萨斯城, cogentco.com 25.52 ms AS174 美国, 科罗拉多州, 丹佛, cogentco.com 38.03 ms AS174 美国, 德克萨斯州, 埃尔帕索, cogentco.com 46.51 ms AS174 美国, 亚利桑那州, 凤凰城, cogentco.com 58.39 ms http: 502 http: 502 59.01 ms http: 502 http: 502 212.13 ms http: 502 http: 502 217.12 ms http: 502 中国, 广东, 广州, chinaunicom.com, 联通 217.43 ms http: 502 中国, 广东, 广州, chinaunicom.com, 联通 217.17 ms AS17816 中国, 广东, 深圳, chinaunicom.com, 联通 215.75 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 广州移动 120.196.165.24 0.36 ms * 局域网 0.58 ms * 局域网 1.11 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 2.32 ms AS174 美国, 伊利诺伊州, 芝加哥, cogentco.com 13.89 ms AS174 美国, 密苏里州, 堪萨斯城, cogentco.com 25.53 ms AS174 美国, 科罗拉多州, 丹佛, cogentco.com 38.33 ms AS174 美国, 德克萨斯州, 埃尔帕索, cogentco.com 46.42 ms AS174 美国, 亚利桑那州, 凤凰城, cogentco.com 58.16 ms AS174 美国, 加利福尼亚州, 洛杉矶, cogentco.com 58.32 ms AS174 美国, 加利福尼亚州, 洛杉矶, cogentco.com 58.29 ms AS174 美国, 加利福尼亚州, 洛杉矶, cogentco.com 59.62 ms AS58453 美国, 加利福尼亚州, 洛杉矶, chinamobile.com, 移动 58.36 ms AS58453 美国, 加利福尼亚州, 洛杉矶, chinamobile.com, 移动 221.80 ms AS58453 中国, 香港, chinamobile.com, 移动 215.36 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 215.51 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 223.13 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 224.44 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 218.30 ms AS56040 中国, 广东, 深圳, chinamobile.com, 移动 SpeedTest 1 2 3 4 5 6 7 8 9 10 --------------------自动更新测速节点列表--本脚本原创-------------------- 位置\t上传速度\t下载速度\t延迟\t丢包率 Speedtest.net\t8849.05 Mbps\t8534.30 Mbps\t1.34\t0.0% 洛杉矶\t903.23 Mbps\t8855.56 Mbps\t59.39\tNULL 法兰克福\t231.28 Mbps\t916.86 Mbps\t104.67\t0.0% 联通上海5G\t9.75 Mbps\t1686.00 Mbps\t211.63\t0.0% 电信浙江\t5.86 Mbps\t538.76 Mbps\t192.39\tNULL 电信Nanjing5G\t68.32 Mbps\t3806.91 Mbps\t204.27\t1.3% 移动陕西5G\t105.71 Mbps\t2979.74 Mbps\t259.80\t1.0% 移动Chengdu\t341.01 Mbps\t3350.41 Mbps\t269.56\t0.0% Ping （Powered By Itdog） 完整测试Link https://paste.spiritlhl.net/code/QmkNZ2.txt\n评价 要我评价就是，小商家就是好\n10G口为共享带宽（？）（猜测\n但是大部分时间都可以跑满\n只要稳定使用就行了，商家基本不管什么，BT也很松\n","date":"2024-01-26T00:00:00Z","image":"https://blog.highp.ing/p/ceping-rackdog/5b7595e45ebeb_hu22a6d53bcfb4132b02c9c1291e4fff65_151516_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ceping-rackdog/","title":"Rackdog 冷门商家 美国芝加哥 $3 1C512M 测评"},{"content":"[测评] 虚妄猫 Nat-kvm-美国-独立v6-2号母鸡 4.9rmb/m 2c512m 40gDisk 2T 纯IPV6小鸡 测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n官网介绍：\n1 2 3 4 5 6 7 8 9 10 11 Nat-kvm-美国-独立v6-2号母鸡 ¥4.90 CNY 每月 + ¥0.50 初装费 核心 2*amd6272 IP 独立ipv6/128 一个 内存 512M 硬盘 40G(机械硬盘io较差) 流量 2000G高速流量，用完暂停 宽带 共享1G 架构 kvm 是否可续费 可以续费 该机器探针地址：https://te1egram.link/\n测试 注：下列测试已开启 Warp-Go\n重点：本机器硬盘不作为参考，小埋说不知道为什么开的是 SSD，原本是HDD\nhttps://paste.spiritlhl.net/u/GmcVSN.txt\n测试脚本: ECS融合怪\n基础信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : AMD Opteron(TM) Processor 6272 CPU 核心数 : 2 CPU 频率 : 2099.998 MHz CPU 缓存 : L1: 128.00 KB / L2: 1.00 MB / L3: 32.00 MB 硬盘空间 : 1.30 GiB / 39.26 GiB 启动盘路径 : /dev/sda1 内存 : 118.73 MiB / 457.54 MiB Swap : [ no swap partition or swap file detected ] 系统在线时间 : 0 days, 0 hour 8 min 负载 : 1.19, 0.40, 0.16 系统 : Debian GNU/Linux 12 (bookworm) (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ✔ Enabled 架构 : x86_64 (64 Bit) 内核 : 6.1.0-9-amd64 TCP加速方式 : cubic 虚拟化架构 : KVM NAT类型 : 独立映射,独立过滤,不支持回环 IPV4 ASN : AS13335 Cloudflare, Inc. IPV4 位置 : Wichita / Kansas / US IPV6 ASN : AS64236 Unreal Servers, LLC IPV6 位置 : Kansas City / US-MO IPV6 子网掩码 : 128 CPU 1 2 3 4 ---------------------CPU测试--感谢lemonbench开源------------------------ -\u0026gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(1核)得分: 814 Scores 2 线程测试(多核)得分: 1623 Scores 内存 1 2 3 4 ---------------------内存测试--感谢lemonbench开源----------------------- -\u0026gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试: 11262.79 MB/s 单线程写测试: 6591.22 MB/s 磁盘 IO测试不对，这台机器不具备参考。这台的服务器明显是固态SSD，可能后台开通出现了问题。不知道咋创建成固态了，所以这台机器不具备参考意义。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -\u0026gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作 写速度 读速度 100MB-4K Block 12.4 MB/s (3033 IOPS, 8.44s) 14.0 MB/s (3414 IOPS, 7.50s) 1GB-1M Block 162 MB/s (155 IOPS, 6.46s) 249 MB/s (237 IOPS, 4.22s) ---------------------磁盘fio读写测试--感谢yabs开源---------------------- Block Size | 4k (IOPS) | 64k (IOPS) ------ | --- ---- | ---- ---- Read | 13.02 MB/s (3.2k) | 107.15 MB/s (1.6k) Write | 13.02 MB/s (3.2k) | 107.71 MB/s (1.6k) Total | 26.05 MB/s (6.5k) | 214.87 MB/s (3.3k) | | Block Size | 512k (IOPS) | 1m (IOPS) ------ | --- ---- | ---- ---- Read | 20.61 MB/s (40) | 19.86 MB/s (19) Write | 22.39 MB/s (43) | 22.17 MB/s (21) Total | 43.00 MB/s (83) | 42.03 MB/s (40) 解锁(IPV4 解锁是 Warp 的作用，IPV6 未开启) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 ---------------------流媒体解锁--感谢sjlleo开源------------------------- 以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用 ----------------Youtube---------------- [IPv4] 连接方式: Youtube Video Server 视频缓存节点地域: 德国法兰克福(FRA16S31) Youtube识别地域: 无信息(null) [IPv6] 连接方式: Google Global CacheCDN (ISP Cooperation) ISP运营商: STLRIX 视频缓存节点地域: 美国 圣路易斯(STL1) Youtube识别地域: 无信息(null) ----------------Netflix---------------- [IPv4] 您的出口IP完整解锁Netflix，支持非自制剧的观看 NF所识别的IP地域信息：美国 [IPv6] 您的出口IP完整解锁Netflix，支持非自制剧的观看 NF所识别的IP地域信息：美国 ---------------DisneyPlus--------------- [IPv4] 当前IPv4出口解锁DisneyPlus 区域：美国区 [IPv6] 当前IPv6出口解锁DisneyPlus 区域：美国区 解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断 ----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出 ============[ Multination ]============ Dazn: Yes (Region: US) HotStar: No Disney+: Yes (Region: US) Netflix: Yes (Region: US) YouTube Premium: Yes Amazon Prime Video: Yes (Region: US) TVBAnywhere+: Yes iQyi Oversea Region: US Viu.com: No YouTube CDN: Frankfurt Netflix Preferred CDN: Kansas City, MO Spotify Registration: Yes (Region: US) Steam Currency: USD ChatGPT: Yes Bing Region: US ======================================= 以下为IPV6网络测试，若无IPV6网络则无输出 ============[ Multination ]============ Dazn: Failed (Network Connection) HotStar: Yes (Region: US) Disney+: Yes (Region: US) Netflix: Yes (Region: US) YouTube Premium: Yes Amazon Prime Video: Unsupported TVBAnywhere+: Failed (Network Connection) iQyi Oversea Region: Failed Viu.com: Failed YouTube CDN: STLRIX in St. Louis, MO Netflix Preferred CDN: Kansas City, MO Spotify Registration: Yes (Region: US) Steam Currency: Failed (Network Connection) ChatGPT: Failed Bing Region: US ======================================= ---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region: 【US】 IP(无参考意义，测试为 CloudFlare 的 WarpIP) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -------------------欺诈分数以及IP质量检测--本脚本原创------------------- 数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对 以下为各数据库编号，输出结果后将自带数据库来源对应的编号 ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ 欺诈分数(越低越好): 7② abuse得分(越低越好): 0④ IP类型: 使用类型(usage_type):hosting① Content Delivery Network⑤ hosting⑧ hosting⑨ 公司类型(company_type):hosting① hosting⑧ 云服务提供商(cloud_provider): Yes⑧ 数据中心(datacenter): No⑥ Yes⑨ 移动网络(mobile): No⑥ 代理(proxy): No① ② Yes⑥ ⑦ ⑧ ⑨ ⑩ VPN(vpn): No① ② ⑦ ⑧ TOR(tor): No① ② ⑦ ⑧ ⑨ TOR出口(tor_exit): No⑧ 搜索引擎机器人(search_engine_robot):② 匿名代理(anonymous): No⑦ ⑧ Yes⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No① ⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ Google搜索可行性：YES 端口25检测: 本地: No 163邮箱：No ------以下为IPV6检测------ 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: Content Delivery Network⑤ Trace(无参考意义，测试为 CloudFlare 的 WarpIP) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ----------------三网回程--感谢zhanghanyun/backtrace开源----------------- 国家: US 城市: Wichita 服务商: AS13335 Cloudflare, Inc. 北京电信 219.141.136.12 电信163 [普通线路] 北京联通 202.106.50.1 联通4837[普通线路] 北京移动 221.179.155.161 测试超时 上海电信 202.96.209.133 电信163 [普通线路] 上海联通 210.22.97.1 联通4837[普通线路] 上海移动 211.136.112.200 移动CMI [普通线路] 广州电信 58.60.188.222 电信163 [普通线路] 广州联通 210.21.196.6 联通4837[普通线路] 广州移动 120.196.165.24 测试超时 成都电信 61.139.2.69 电信163 [普通线路] 成都联通 119.6.6.6 联通4837[普通线路] 成都移动 211.137.96.205 移动CMI [普通线路] ---------------------回程路由--感谢fscarmen开源及PR--------------------- 依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉! 广州电信 58.60.188.222 2.91 ms AS13335 中国, 香港, cloudflare.com 9.31 ms AS13335 美国, 密苏里州, 堪萨斯城, level3.com 3.08 ms AS13335 美国, 密苏里州, 堪萨斯城, cloudflare.com 2.69 ms AS1299 美国, 密苏里州, 堪萨斯城, telia.com 39.58 ms AS1299 美国, 加利福尼亚州, 圣何塞, telia.com 41.06 ms AS4134 美国, 加利福尼亚州, 圣何塞, chinatelecom.com.cn, 电信 190.62 ms AS4134 中国, 广东, 广州, chinatelecom.com.cn, 电信 201.77 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 191.76 ms AS4134 中国, 广东, 深圳, chinatelecom.com.cn, 电信 广州联通 210.21.196.6 4.43 ms AS13335 中国, 香港, cloudflare.com 2.67 ms AS13335 美国, 密苏里州, 堪萨斯城, level3.com 33.91 ms AS13335 美国, 密苏里州, 堪萨斯城, cloudflare.com 3.05 ms AS1299 美国, 密苏里州, 堪萨斯城, telia.com 2.98 ms AS1299 美国, 密苏里州, 堪萨斯城, telia.com 43.85 ms AS1299 美国, 加利福尼亚州, 洛杉矶, telia.com 243.15 ms AS1299 美国, 加利福尼亚州, 洛杉矶, telia.com 223.90 ms AS4837 中国, 北京, chinaunicom.com, 联通 238.81 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通 238.15 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通 207.26 ms AS4837 中国, 广东, 广州, chinaunicom.com, 联通 219.51 ms AS17816 中国, 广东, 深圳, chinaunicom.com, 联通 244.17 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 216.35 ms AS17623 中国, 广东, 深圳, chinaunicom.com, 联通 广州移动 120.196.165.24 3.17 ms AS13335 中国, 香港, cloudflare.com 2.76 ms AS13335 美国, 密苏里州, 堪萨斯城, level3.com 36.06 ms AS13335 美国, 密苏里州, 堪萨斯城, cloudflare.com 3.02 ms AS1299 美国, 密苏里州, 堪萨斯城, telia.com 39.42 ms AS1299 美国, 加利福尼亚州, 圣何塞, telia.com 39.13 ms AS58453 美国, 加利福尼亚州, 圣何塞, chinamobile.com, 移动 202.19 ms AS58453 中国, 广东, 广州, chinamobile.com, 移动 200.43 ms AS9808 中国, 广东, 广州, chinamobile.com, 移动 200.83 ms AS56040 中国, 广东, 深圳, chinamobile.com, 移动 Speedtest(Warp) 1 2 3 4 5 6 --------------------自动更新测速节点列表--本脚本原创-------------------- 位置 上传速度 下载速度 延迟 丢包率 Speedtest.net 932.24 Mbps 927.97 Mbps 5.11 0.0% 洛杉矶 211.73 Mbps 202.58 Mbps 70.29 0.0% 法兰克福 203.63 Mbps 230.39 Mbps 124.91 0.0% 移动Chengdu 0.22 Mbps 239.75 Mbps 304.33 26.5% 全球Ping(Itdog Ipv6) 全球持续Ping(Itdog Ipv6) 评价 小埋家的都知道，低价机器多了去了\n也不能说是灵车，买来也是探针+1\nIPV6的ping在联通和电信都挺好的，但是一到移动就拉跨了，丢包率至少20起步\n2c512m的机器，也不知道干啥好了，等会整个站吧\n下辈子建议抛弃移动（我就是移动）\n附上我家本地网络ping ","date":"2024-01-26T00:00:00Z","image":"https://blog.highp.ing/p/ceping-nomaius2/5a2e8b12f2e48_hu7dcc0a26740252de43fc20275f2360ad_140850_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ceping-nomaius2/","title":"虚妄猫 美国2号主机 4.9rmb/m 2c512m 测评"},{"content":"[测评] 虚妄猫 免费Blog 虚拟空间 测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n测试 慈善埋今天早上在群里说给大伙来个免费的Blog 虚拟主机，仅支持Blog，合法的Blog\n刚才就给我们开了，是人工手动审核的\n测试站：http://nomao.blog.highp.ing/\n可以看到，线路还是很不错的，国内访问性满分\n甚至高墙地区都可以连(泉州等地)，慈善埋太好了\n需要注意的是，这虚拟主机仅支持 php5.4/7.4/HTML 纯静态，并且只有 300GB 月流量\n对于小型Blog站点来说已经够了，还带 FTP 支持和 MYSQL 数据库\n我个人使用的是 纯Html静态，所以访问速度会很快，如果PHP 可能稍微慢点\n慈善埋简直就是超人！\n","date":"2024-01-26T00:00:00Z","image":"https://blog.highp.ing/p/ceping-nomaifreehost/f17416c525531a46068f5f76dacf003b5_hua15da0ba232614f103cf01506d58ae50_1309459_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/ceping-nomaifreehost/","title":"虚妄猫 免费Blog 虚拟空间 测评"},{"content":"[测评] PoloCloud UKLite IPv6 1rmb小鸡 测评 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n机器基本信息 CPU: 1C AMD Ryzen 9 7900\nRAM: 512M\nNetwork: 300Mbps@250G\nDisk: 10G\n测试脚本: ECS\n购买链接: https://polocloud.xyz/index.php?rp=/store/uklite-ipv6-vps\n基础信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ---------------------基础信息查询--感谢所有开源项目--------------------- CPU 型号 : AMD Ryzen 9 7900 12-Core Processor CPU 核心数 : 1 CPU 频率 : 3699.982 MHz CPU 缓存 : L1: 128.00 KB / L2: 512.00 KB / L3: 16.00 MB 硬盘空间 : 1.30 GiB / 9.81 GiB 启动盘路径 : /dev/sda1 内存 : 92.52 MiB / 475.55 MiB Swap : [ no swap partition or swap file detected ] 系统在线时间 : 0 days, 0 hour 14 min 负载 : 0.23, 0.07, 0.02 系统 : Debian GNU/Linux 11 (bullseye) (x86_64) AES-NI指令集 : ✔ Enabled VM-x/AMD-V支持 : ✔ Enabled 架构 : x86_64 (64 Bit) 内核 : 5.10.0-11-cloud-amd64 TCP加速方式 : bbr 虚拟化架构 : KVM NAT类型 : 无法检测 IPV4 ASN : AS151338 POLONETWORK LIMITED IPV4 位置 : Coventry / England / GB IPV6 ASN : AS151338 Polonetwork IPV6 位置 : Coventry / England CPU \u0026amp;\u0026amp; Ram \u0026amp;\u0026amp; Disk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ----------------------CPU测试--通过sysbench测试------------------------- -\u0026gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec) 1 线程测试(单核)得分: 5977 Scores ---------------------内存测试--感谢lemonbench开源----------------------- -\u0026gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec) 单线程读测试:\t70877.71 MB/s 单线程写测试:\t30639.44 MB/s ------------------磁盘dd读写测试--感谢lemonbench开源-------------------- -\u0026gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode) 测试操作\t写速度\t读速度 100MB-4K Block\t4.1 MB/s (1002 IOPS, 25.55s)\t4.1 MB/s (998 IOPS, 25.63s) 1GB-1M Block\t106 MB/s (101 IOPS, 9.93s)\t106 MB/s (100 IOPS, 9.91s) ---------------------磁盘fio读写测试--感谢yabs开源---------------------- Block Size | 4k (IOPS) | 64k (IOPS) ------ | --- ---- | ---- ---- Read | 3.98 MB/s (996) | 63.77 MB/s (996) Write | 4.01 MB/s (1.0k) | 64.18 MB/s (1.0k) Total | 7.99 MB/s (1.9k) | 127.95 MB/s (1.9k) | | Block Size | 512k (IOPS) | 1m (IOPS) ------ | --- ---- | ---- ---- Read | 97.70 MB/s (190) | 96.49 MB/s (94) Write | 102.89 MB/s (200) | 102.92 MB/s (100) Total | 200.60 MB/s (390) | 199.41 MB/s (194) 流媒体 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ---------------------流媒体解锁--感谢sjlleo开源------------------------- 以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用 ----------------Youtube---------------- [IPv6] 连接方式: Youtube Video Server 视频缓存节点地域: LHR(LHR48S34) Youtube识别地域: 无信息(null) ----------------Netflix---------------- [IPv4] 您的网络可能没有正常配置IPv4，或者没有IPv4网络接入 [IPv6] 您的出口IP完整解锁Netflix，支持非自制剧的观看 NF所识别的IP地域信息：英国 ---------------DisneyPlus--------------- [提醒] 无法获取DisneyPlus权验接口信息，当前测试可能会不准确 [IPv6] 当前IPv6出口解锁DisneyPlus 区域：英国区 解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断 ----------------流媒体解锁--感谢RegionRestrictionCheck开源-------------- 以下为IPV4网络测试，若无IPV4网络则无输出 以下为IPV6网络测试，若无IPV6网络则无输出 ============[ Multination ]============ Dazn:\tYes (Region: GB) HotStar:\tYes (Region: CA) Disney+:\tYes (Region: GB) Netflix:\tYes (Region: GB) YouTube Premium:\tYes (Region: GB) Amazon Prime Video:\tYes (Region: GB) TVBAnywhere+:\tYes iQyi Oversea Region:\tGB Viu.com:\tYes (Region: SG) YouTube CDN:\tLondon Netflix Preferred CDN:\tAssociated with [hkgo LLC] in [London ] Spotify Registration:\tNo Steam Currency:\tGBP ChatGPT:\tYes Bing Region:\tGB ======================================= ---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR-------------- Tiktok Region:\t【GB】 IP \u0026amp;\u0026amp; Network 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 -------------------欺诈分数以及IP质量检测--本脚本原创------------------- 数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对 以下为各数据库编号，输出结果后将自带数据库来源对应的编号 ipinfo数据库 ① | scamalytics数据库 ② | virustotal数据库 ③ | abuseipdb数据库 ④ | ip2location数据库 ⑤ ip-api数据库 ⑥ | ipwhois数据库 ⑦ | ipregistry数据库 ⑧ | ipdata数据库 ⑨ | ipgeolocation数据库 ⑩ 以下为IPV6检测 IP类型: 使用类型(usage_type):isp⑧ business⑨ 公司类型(company_type):isp⑧ 云服务提供商(cloud_provider): No⑧ 数据中心(datacenter): No⑥ ⑨ 移动网络(mobile): No⑥ 代理(proxy): No⑥ ⑦ ⑧ ⑨ ⑩ VPN(vpn): No⑦ ⑧ TOR(tor): No⑦ ⑧ ⑨ TOR出口(tor_exit): No⑧ 匿名代理(anonymous): No⑦ ⑧ ⑨ 攻击方(attacker): No⑧ ⑨ 滥用者(abuser): No⑧ ⑨ 威胁(threat): No⑧ ⑨ iCloud中继(icloud_relay): No⑧ ⑨ 未分配IP(bogon): No⑧ ⑨ Google搜索可行性：YES 端口25检测: 本地: No 163邮箱：No 欺诈分数(越低越好): 0② abuse得分(越低越好): 0④ IP类型: Data Center/Web Hosting/Transit⑤ ----------------三网回程--感谢zhanghanyun/backtrace开源----------------- 纯IPV6网络无法查询 ---------------------回程路由--感谢fscarmen开源及PR--------------------- 依次测试电信/联通/移动经过的地区及线路，核心程序来自nexttrace，请知悉! 广东电信 240e:0:a::c9:5238 0.23 ms AS151338 英国 英格兰 考文垂 0.94 ms AS212027 英国 pebblehost.com 4.03 ms AS212027 英国 pebblehost.com 0.34 ms AS212027 英国 pebblehost.com 31.55 ms AS212027 英国 pebblehost.com 8.12 ms AS1299 英国 英格兰 伦敦 arelion.com 7.88 ms AS1299 英国 英格兰 伦敦 arelion.com 8.50 ms AS1299 英国 英格兰 伦敦 arelion.com 240.49 ms AS4134 中国 广东 广州 chinatelecom.com.cn 电信 244.04 ms AS4134 中国 广东 广州 chinatelecom.com.cn 电信 257.36 ms AS4134 中国 广东 广州 chinatelecom.com.cn 电信 广东联通 2408:8651:3700::b 0.14 ms AS151338 英国 英格兰 考文垂 84.72 ms AS212027 英国 pebblehost.com 8.44 ms AS212027 英国 pebblehost.com 0.35 ms AS212027 英国 pebblehost.com 10.39 ms AS212027 英国 pebblehost.com 218.06 ms AS1299 法国 法兰西岛大区 巴黎 arelion.com 25.96 ms AS1299 德国 黑森州 美因河畔法兰克福 arelion.com 244.54 ms AS4837 中国 chinaunicom.cn 235.95 ms AS4837 中国 北京 chinaunicom.cn 联通 252.59 ms AS4837 中国 北京 chinaunicom.cn 联通 252.05 ms AS4837 中国 北京 chinaunicom.cn 联通 264.44 ms AS4837 中国 chinaunicom.cn 联通 258.76 ms AS4837 中国 chinaunicom.cn 广东移动 2409:8055:40:2a1::1 0.17 ms AS151338 英国 英格兰 考文垂 1.28 ms AS212027 英国 pebblehost.com 79.39 ms AS212027 英国 pebblehost.com 1.40 ms AS212027 英国 pebblehost.com 9.03 ms AS212027 英国 pebblehost.com 9.00 ms AS58453 中国 香港 cmi.chinamobile.com 移动 110.62 ms AS58453 中国 香港 cmi.chinamobile.com 移动 252.12 ms AS58453 中国 香港 cmi.chinamobile.com 202.54 ms AS9808 中国 广东 广州 chinamobile.com 移动 352.97 ms AS9808 中国 广东 广州 chinamobile.com 移动 251.81 ms AS9808 中国 广东 广州 chinamobile.com 移动 221.18 ms AS9808 中国 广东 广州 chinamobile.com 移动 218.83 ms AS9808 中国 chinamobile.com 评价 性价比拉满的 Ipv6 神机，令人震惊的是 CPU 将近6000分！还是单核\n流媒体解锁也超牛逼，IPV6全绿\n可以说是非常牛逼了\n","date":"2024-01-25T00:00:00Z","image":"https://blog.highp.ing/p/ceping-poloukv6/2e4c51c7b02c7ecc4c064c575b7910e3_hu9c47eec3b8a63cbd28e5e3334a4b1457_546533_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ceping-poloukv6/","title":"PoloCloud UKLite IPv6 1rmb小鸡 测评"},{"content":"github-student-pack 本文由 High Ping Network 的小伙伴 Lemonawa 进行编撰，首发于 本博客\n申请要求 目前就读于授予学位或文凭的学习课程，例如高中、中学、学院、大学、家庭学校或类似的教育机构。\n拥有一个可验证的学校颁发的电子邮件地址或上传证明您当前学生身份的文件。\n拥有 GitHub 用户帐户。\n至少 13 岁。\n避坑点 建议使用学生证之类的实体证件，邮箱大多被BAN\n提交的文件要求有有效期，有毕业年月就好，没有也可以自己P一个上去\n如果自己在学校附近就不要使用代理服务器/VPN等，Github会识别IP地址所在城市与学校位置\n步骤 打开 https://education.github.com/discount_requests/student_application\n填写/上传个人及学校信息\n等10天\n如果幸运的话，就会收到邮件\n否则就要再次申请\n全部福利 https://education.github.com/pack\n都在这了，自己看吧\n","date":"2024-01-08T00:00:00Z","image":"https://blog.highp.ing/p/github-student-pack/4b0317bc-4599-11e4-8bc3-0ca4dd5223e8_hud0c2b695a2cb0b7c98d0157fecff51a7_37474_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/github-student-pack/","title":"GitHub Student Developer Pack 的申请教程"},{"content":"Yukki Music Bot 的部署 本文由 High Ping Network 的小伙伴 Lemonawa 进行编撰，首发于 本博客\n环境准备 示例系统：Debian 11 x64\n此外，你需要准备一个用于播放音乐的Telegram账号（助理账户）和一个Telegram Bot（可在@BotFather处创建Bot），然后把这两个账号拉进一个群（作为Log群）\n连接上ssh，开始操作：\n1 2 3 4 5 6 7 8 #先更新下软件源 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y #安装一些必要的包 sudo apt install python3-pip ffmpeg git curl -y #更新一下pip sudo pip3 install -U pip #安装Node.js curl -fssL https://deb.nodesource.com/setup_19.x | sudo -E bash - \u0026amp;\u0026amp; sudo apt-get install nodejs -y \u0026amp;\u0026amp; npm i -g npm 安装 1 2 3 4 #把代码克隆下来 git clone https://github.com/notreallyshikhar/YukkiMusicBot \u0026amp;\u0026amp; cd YukkiMusicBot #安装必要的pip包 pip3 install -U -r requirements.txt 配置 用你喜欢的方式（如vim/nano）打开.env，配置以下内容：\n1 2 3 4 5 6 7 8 STRING_SESSION = #从@yukkistringbot获取（助理账户） API_ID = #从my.telegram.org获取（主账户） API_HASH = #从my.telegram.org获取（主账户） BOT_TOKEN = #从botfather获取token（主账户） MONGO_DB_URI = #从mongodb.com获取 LOG_GROUP_ID = #Log群组的ID MUSIC_BOT_NAME = #给自己的bot取个名字 OWNER_ID = #主账户的ID 启动 配置守护进程：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 cat \u0026lt;\u0026lt;\u0026#39;TEXT\u0026#39; \u0026gt; /etc/systemd/system/musicbot.service [Unit] Description=YukkiMusicBot daemon After=network.target [Install] WantedBy=multi-user.target [Service] Type=simple WorkingDirectory=/root/YukkiMusicBot ExecStart=/usr/bin/bash /root/YukkiMusicBot/start Restart=always TEXT 1 2 3 4 #启动 systemctl start musicbot #设置开机自启 ystemctl enable musicbot ","date":"2024-01-08T00:00:00Z","image":"https://blog.highp.ing/p/musicbot/YukkiMusicBot_hub5579f3c003bab5f6fceabdeb4e48c29_80448_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/musicbot/","title":"Yukki Music Bot 的部署"},{"content":"博客访问速度提升指南 本文由 High Ping Network 的小伙伴 Lemonawa 进行编撰，首发于 本博客\n使用静态资源CDN服务 使用静态资源 CDN 上的资源可以加快页面加载的时间, 静态资源 CDN 的服务器大多离访问者较近, 源站只需加载很少的内容即可完成页面加载, 同时减轻了源站的网络负载\n具体测评可参考: 常用静态公共CDN评测\n使用节点分布广泛的图床 图床最初为减轻源站负担而设立, 更可用于加快页面访问速度\n具体测评可参考: 各类主流图床评测\n本站采用的是B站图床, 节点众多\n尽量采用静态驱动程序 对于博客，WordPress 虽然绚丽多彩\n相比 Hexo 有更为丰富的主题资源和易用性\n但其加载速度远远慢于Hexo\n博客类网站强烈建议使用静态驱动程序(如: hexo, jekyll等), 加载速度将获得显著提升\n","date":"2024-01-07T00:00:00Z","image":"https://blog.highp.ing/p/blogspeedup/difference-between-internet-and-download-speed-excitel_hu46e96ed12b86df3a7e839119365d7c4e_138250_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/blogspeedup/","title":"博客访问速度提升指南"},{"content":"各大厂商公共 DNS 大全 本文由 High Ping Network 的小伙伴 Lemonawa 进行编撰，首发于 本博客\n名词解释 此处仅展示广义上的概念，部分(如Cloudflare)有特殊解释的将会在后面说明\nDoH: DNS over HTTPS (基于HTTPS的DNS) DoT: DNS over TLS (基于TLS的DNS) DNS64: 一种在不存在 AAAA 记录时从 A 记录合成 AAAA 记录的机制，用于支持纯IPv6网络 DNS 大陆 Dnspod Dnspod目前为腾讯所有，海内外的连通性都不错\nIPv4: 119.29.29.29 IPv6: 2402:4e00:: DoH: https://doh.pub/dns-query DoH(IP): https://1.12.12.12/dns-query, https://120.53.53.53/dns-query DoH(国密SM2): https://sm2.doh.pub/dns-query DoT: dot.pub DoT(IP): 1.12.12.12, 120.53.53.53 Alidns 阿里巴巴提供的DNS服务，国内连通性好，国外连通性差\nIPv4: 223.5.5.5, 223.6.6.6 IPv6: 2400:3200::1, 2400:3200:baba::1 DoH: https://dns.alidns.com/dns-query DoT: dns.alidns.com 114DNS 老牌，国外一般\nIPv4: 114.114.114.114, 114.114.115.115 CNNIC DNS 中国互联网信息中心提供，国外连通性差\nIPv4: 1.2.4.8, 210.2.4.8 IPv6: 2001:dc7:1000::1 Baidu DNS 百度提供，海外一般\nIPv4: 180.76.76.76 IPv6: 2400:da00::6666 360 DNS 国内单节点\nIPv4(电信+铁通+移动): 101.226.4.6, 218.30.118.6 IPv4(联通): 123.125.81.6, 140.207.198.6 DoH: https://doh.360.cn DoT: dot.360.cn 海外 此处列出的DoT服务大部分无法使用\nGoogle Public DNS 老牌，国内连通性还可以，国外连通性极好\nIPv4: 8.8.8.8, 8.8.4.4 IPv6: 2001:4860:4860::8888, 2001:4860:4860::8844 DoH: https://dns.google/dns-query DoT: dns.google DNS64: 2001:4860:4860::6464, 2001:4860:4860::64 DoH(DNS64): https://dns64.dns.google/dns-query DoT(DNS64): dns64.dns.google Cloudflare 1.1.1.1 国外连通性天花板，大陆连通性一般，移动友好\nIPv4: 1.1.1.1, 1.0.0.1 IPv6: 2606:4700:4700::1111, 2606:4700:4700::1001 DoH: https://cloudflare-dns.com/dns-query DoT: 1dot1dot1dot1.cloudflare-dns.com, one.one.one.one DNS64: 2606:4700:4700::64, 2606:4700:4700::6400 Quad9 DNS IBM，国外不错\nIPv4: 9.9.9.9, 149.112.112.112 IPv6: 2620:fe::fe, 2620:fe::9 DoH: https://dns.quad9.net/dns-query DoT: dns.quad9.net OpenDNS Cisco提供，老牌，国外不错\nIPv4: 208.67.222.222, 208.67.220.220, 208.67.222.220, 208.67.220.222 IPv6: 2620:119:35::35, 2620:119:53::53 DoH: https://doh.opendns.com/dns-query Neustar UltraDNS Neustar提供，有国内节点，移动会被丢到国外\nIPv4: 64.6.64.6, 64.6.65.6 IPv6: 2620:74:1b::1:1, 2620:74:1c::2:2 ","date":"2024-01-07T00:00:00Z","image":"https://blog.highp.ing/p/dns/blog_img_dnsfiltering_cover_hu7867c6149207359e7156020ef0f2bed9_113482_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/dns/","title":"各大厂商公共 DNS 大全"},{"content":"对于博客而言的 Markdown 写作规范 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n本文会严格地按照 本文所讲述的 Markdown 规范 进行编写\n关于 Markdown Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。———— Markdown 官方教程\n由于其可以快速转化成为 Html 等基本文件格式，广泛地被博客程序所采用。在如今，大部分的博客用的都是基于 Markdown 的编辑器\n也许是 可视化编辑器，也有可能是像我一样使用 Vim 或者 Visual Studio Code 进行写作的\n现在的大部分博客程序，都采用了 Markdown 进行渲染 Html\nHugo: 本博客所使用的就是 Hugo Hexo: 与 Hugo 类似的纯 Html 博客程序 WordPress: 一款 PHP 博客程序，为最受欢迎的网站内容管理系统 Typecho: 也是一款 PHP 博客程序，也被广泛地运用在个人博客上 正确地编写博客，让阅读者有更好的阅读体验，是内容创作者的工作之一\nPS: 各大搜索引擎也会根据用户浏览体验来进行排名的微调\n规范 适当的空格与大写 可能很多内容创作者都没有意识到这一点，我们需要在 英文/数字与汉字 之间输入恰当的空格\n正确示范: 错误示范: 上图应改为 本教程环境为 Ubuntu 22.04\n一般的，大部分单词开头首字母都应该大写，当数字与字母连接时，也应该使用空格！\n适当的高亮 高亮不是随便整的，一般用于比较需要重点突出的文字\n需要高亮的地方 一些专有名词，比如本文的 High Ping Network\n或是一些介绍的对象，都应当有适当的高亮，不然会造成阅读困难，让读者抓不住重点\n无需高亮的地方 不需要高亮的地方，有列表和标题\n列表所介绍的东西，前面不需要，后面需要\n当列表没有对每个项目的介绍时 (可以想象为无冒号)，全都不需要高亮\n图片的用法 图片的基本 Markdown 语法为\n1 ![Alt text](FileName) 其中，FileName 并不重要，重要的是 Alt text\n应当在 Alt text 中写一些关于这张图片的信息，简单介绍即可\n标题的递进 千万，千万不要乱递进标题\n上面的图片 从两个#，直接跳到四个#了\n这样的递进可能对你的行文有所帮助，但是非常不符合规范，而且在部分有生成目录功能的博客软件中，目录可能会变得非常奇怪\n标点符号 无需出现的标点符号 这里以中文的标点符号作为演示\n在每一句话的结尾，当不需要强调突出的时候，尽量避免出现句号与逗号\n可以看到，本文每一段的结尾，从来都没有句号与逗号\n但是可以出现感叹号、省略号等具有突出强调作用标点\n英文标点符号 由于 Markdown 的解析原因，请不要使用 除了逗号句号以外的中文符号，或者叫它们全角符号\n这会导致不同的 Markdown 解析器 出现不同的结果\n上图中的删除线，在不同的 Markdown 解析器 中出现了不同的结果:\nVSCode: 可以正常显示删除线 Hexo: 可以正常显示删除线 Hugo: 无法正常显示删除线 我们也可以从上图的比较中看出，使用全角标点符号会有不可预想的后果\n所以，这里列出一些建议使用 英文标点符号:\n冒号: 使用半角符号时候，一般需要在 半角冒号后加一个空格 括号 下划线 连字符 其他的不常用符号 (如 ~ | \\ / 等) 列表 Markdown 的列表分为两种，有序列表 和 无序列表，最常使用的时无序列表\n在定义一个有序列表时，建议使用 数字. 的形式\n正确示范:\n错误示范:\n虽然是错误的示范，但是 Markdown 会自动帮我们纠正 (部分 Markdown 解析器 无此功能)\n显示效果:\n引用 Markdown 有一个专门用来引用的语法，那就是 \u0026gt;\n比如:\n请不要简单地使用一个 Tab 进行引用，这样的引用会产生歧义\n错误示范:\n小结 上文提到的就是我们在使用 Markdown 进行内容创作时需要注意的地方，更全面的 Markdown 教程可以在 Markdown 官方教程 查阅\n本文收录的一些写作规范也是我平常在写作中经常遇到的，我也会帮助 High Ping Network 的伙伴们进行适当的修改，才可以发布到博客上\n","date":"2024-01-03T00:00:00Z","image":"https://blog.highp.ing/p/writemarkdown/image-16_hucaed53c3386eabc3ed1d9c996cb20685_207073_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/writemarkdown/","title":"对于博客而言的 Markdown 写作规范"},{"content":"在 VPS 中使用 OPENVPN 内置代理 本文由 High Ping Network 的小伙伴 Aries 进行编撰，首发于 Telegram @aries_init\n本文的示例 OpenVPN 提供商为 PureVPN\n感谢 OpenAI 的 ChatGPT **太强了！**解决了大部分问题！ PureVPN 为本文的示例服务提供商 步骤 大致可分为三步：\n修改 PureVPN 下发的conf文件(修改路由)\n安装配置 OpenVPN\n修改 Xray(R) 的 outbound 路由\n修改 PureVPN 的 conf 文件 去 PureVPN 下载配置文件 (选择 OpenVPN TCP 类型，UDP 貌似也可以，只要是 OpenVPN 配置文件就行)\n修改 conf 文件，重点是修改他的路由 route\n注意修改为 route-nopull 意味着路由需要手动配置，原来的意思是接管全局。\n上传配置文件到VPS，这里我命名为 test.conf\n官方给的二进制文件虽然方便，但是默认他的接管路由是全局，包括 22(SSH) 端口，使得我们的机器失联，因此需要手动配置。\n安装配置 OpenVPN 使用 软件包管理器 安装 OpenVPN (不同系统请自行查询安装方法)\n1 sudo apt-get install openvpn 写一个 login.conf 文件 (Fron OpenAI)\nlogin.conf 是一个文本文件，用于存储您的 PureVPN 帐户的用户名和密码。可以按照以下步骤编写 login.conf：\n创建一个新文件并将其命名为 login.conf。\n打开 login.conf 并在第一行输入您的 PureVPN 用户名，然后在第二行输入您的 PureVPN 密码。例如：\n1 2 myusername mypassword 请注意，您应该将实际的用户名和密码替换为 myusername 和 mypassword。\n保存并关闭文件。\n确保 login.conf 文件的权限设置为仅限当前用户可读写，使用以下命令更改其权限：\n1 chmod 600 login.conf 这将确保只有您自己可以读取和写入文件。\n请注意，login.conf 中的用户名和密码应与您在 PureVPN 网站上注册的凭据相同。如果您不确定自己的用户名和密码，可以登录 PureVPN 网站并在账户资料中查找它们。\n补充: PureVPN 授权账号页面\n连接 OpenVPN\n1 sudo openvpn --config test.conf --data-ciphers-fallback AES-256-CBC 注意：\n该警告消息指出，在未来的 OpenVPN 版本中，选项 --cipher 将被忽略，因此建议使用 --data-ciphers 选项进行加密算法的协商。\n更改 --cipher 选项：你也可以通过更改 OpenVPN命令中的 --cipher 选项来消除警告消息\n出现 Init... 说明连接成功了，此时会创建一个tun0的虚拟网卡 此处 Aries 使用了 Screen 来进行示例保活，但本博客有更好的有关于 Screen 的文章，请参阅 https://blog.highp.ing/p/screen/\n配置路由 (Xray/XrayR) 配置 Xray 路由 模板配置\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 { \u0026#34;api\u0026#34;: { \u0026#34;services\u0026#34;: [ \u0026#34;HandlerService\u0026#34;, \u0026#34;LoggerService\u0026#34;, \u0026#34;StatsService\u0026#34; ], \u0026#34;tag\u0026#34;: \u0026#34;api\u0026#34; }, \u0026#34;inbounds\u0026#34;: [ { \u0026#34;listen\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;port\u0026#34;: 62789, \u0026#34;protocol\u0026#34;: \u0026#34;dokodemo-door\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;127.0.0.1\u0026#34; }, \u0026#34;tag\u0026#34;: \u0026#34;api\u0026#34; } ], \u0026#34;outbounds\u0026#34;: [ { \u0026#34;protocol\u0026#34;: \u0026#34;freedom\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;domainStrategy\u0026#34;: \u0026#34;UseIPv4\u0026#34; }, \u0026#34;streamSettings\u0026#34;: { \u0026#34;sockopt\u0026#34;: { \u0026#34;tcpFastOpen\u0026#34;: true, \u0026#34;interface\u0026#34;: \u0026#34;tun0\u0026#34; } }, \u0026#34;mux\u0026#34;: { \u0026#34;enabled\u0026#34;: false, \u0026#34;concurrency\u0026#34;: 8 } }, { \u0026#34;protocol\u0026#34;: \u0026#34;blackhole\u0026#34;, \u0026#34;settings\u0026#34;: {}, \u0026#34;tag\u0026#34;: \u0026#34;blocked\u0026#34; } ], \u0026#34;policy\u0026#34;: { \u0026#34;system\u0026#34;: { \u0026#34;statsInboundDownlink\u0026#34;: true, \u0026#34;statsInboundUplink\u0026#34;: true } }, \u0026#34;routing\u0026#34;: { \u0026#34;rules\u0026#34;: [ { \u0026#34;inboundTag\u0026#34;: [ \u0026#34;api\u0026#34; ], \u0026#34;outboundTag\u0026#34;: \u0026#34;api\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34; }, { \u0026#34;ip\u0026#34;: [ \u0026#34;geoip:private\u0026#34; ], \u0026#34;outboundTag\u0026#34;: \u0026#34;blocked\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34; }, { \u0026#34;outboundTag\u0026#34;: \u0026#34;blocked\u0026#34;, \u0026#34;protocol\u0026#34;: [ \u0026#34;bittorrent\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34; } ] }, \u0026#34;stats\u0026#34;: {} } 重点是 outbounds 那一块，大体可以解释为流经 Xray 的流量都会移交到 TUN0 这个虚拟网卡处理\n配置 XrayR 路由 首先你先要确保你的 XrayR 的主配置文件使用自定义的配置\n要修改的配置有两个\n一个是 custom_outbound.json 主管流量出口\n另一个是 route.json 主管路由\n我们使用 OpenVPN 创建了一个名称为 tun0 的虚拟网卡\n需要在流量传入后进行处理使得被处理的流量由 tun0 流出，而流出则需要指向即修改路由。\n因此我们需要修改出口文件与路由文件 (注意各 TAG 要对应)\ncustom_outbound.json 配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 [{ \u0026#34;tag\u0026#34;: \u0026#34;pure\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;freedom\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;domainStrategy\u0026#34;: \u0026#34;UseIPv4\u0026#34; }, \u0026#34;streamSettings\u0026#34;: { \u0026#34;sockopt\u0026#34;: { \u0026#34;tcpFastOpen\u0026#34;: true, \u0026#34;interface\u0026#34;: \u0026#34;tun0\u0026#34; } }, \u0026#34;mux\u0026#34;: { \u0026#34;enabled\u0026#34;: false, \u0026#34;concurrency\u0026#34;: 8 } }, { \u0026#34;protocol\u0026#34;: \u0026#34;blackhole\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;block\u0026#34; } ] route.json 配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \u0026#34;domainStrategy\u0026#34;: \u0026#34;IPOnDemand\u0026#34;, \u0026#34;rules\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34;, \u0026#34;outboundTag\u0026#34;: \u0026#34;block\u0026#34;, \u0026#34;ip\u0026#34;: [ \u0026#34;geoip:private\u0026#34; ] }, { \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34;, \u0026#34;outboundTag\u0026#34;: \u0026#34;block\u0026#34;, \u0026#34;protocol\u0026#34;: [ \u0026#34;bittorrent\u0026#34; ] }, { \u0026#34;type\u0026#34;: \u0026#34;field\u0026#34;, \u0026#34;outboundTag\u0026#34;: \u0026#34;pure\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;udp,tcp\u0026#34; } ] } ","date":"2024-01-02T00:00:00Z","image":"https://blog.highp.ing/p/vps-openvpn/image_hu6ea7251c795424c230b58882867c5222_99390_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/vps-openvpn/","title":"在VPS中使用OPENVPN内置代理"},{"content":"新年新气象－－新博客，新域名，新ASN！ Hi! 这里是 High Ping Network 的官方博客\nHigh Ping Network 的 ASN 正在申请中\n我们是由 11 个人组成的小团队：(按照首字母顺序排列)\n@GenshinMinecraft @HighPingKat @imkcp @Lemonawa @Lengz1m0 @Mio @re:NoAries @rtx ςαΤ @sam @Toothless @UniOreoX 我们的举报邮箱: abuse@highp.ing\n我们的官网: https://highp.ing\n我们的博客: https://blog.highp.ing\nHigh Ping Network 这一名称的由来 High Ping 的意思是 延迟高，所以 High Ping Network 的意思就是 延迟很高的网络\n这一名字具有自嘲与搞笑的特点，并在我们的投票中胜出\n由于不希望让 ASN Name 变得那么长，所以我们将 High Ping Network 中的 Network 删去了\nGlad To Meet You, The Internet! 我家跨上了“信息高速路”\nQ: 为什么要整一个 ASN ？\nA: 在之前，我们初次接触到了 DN42 网络，但是觉得在这样一个小众的圈子内不怎么好玩，所以产生了一个大胆的想法，那就是 整一个ASN!\n这是我们跨入 Internet 的又一个脚印，也是我们接触新事物的一个开始！\n正如那篇课文《我家跨上了“信息高速路”》，这次，我们是真的跨上了 信息高速路！\n有了自己的 ASN 后，我想对 Internet 的各位说一句：\nGlad To Meet You, The Internet! About This Blog 这一个博客，是 High Ping 的所有小伙伴们的博客\n原来是 GenshinMinecraft 所有的 https://c1oudf1are.link (现在已经重定向到此)\nHigh Ping 的所有小伙伴们都可以在这里发表博文，分享自己的看法，教程等\u0026hellip;\u0026hellip;\n非常感谢为这个博客提供了帮助的小伙伴们，这个博客已经不再属于\u0026quot;我\u0026quot;，而是属于 High Ping Network!\n本博客采用应用为 Hugo，部署平台为 CloudFlare Pages，托管平台为 GitHub\n感谢之前所有小伙伴的支持，谢谢你们！\n最后，祝大家新年快乐！ ","date":"2024-01-01T00:00:00Z","image":"https://blog.highp.ing/p/2024new/8lGqPEAUXB5HaCz_hua1f43fb4538f7439d5f2e88aa6c5413f_292373_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/2024new/","title":"新年新气象－－新博客，新域名，新ASN！"},{"content":"使用pgp向github提交签名commit 本文由 High Ping Network 的小伙伴 sam 进行编撰，首发于 Sam 的博客\n快速介绍 什么是pgp GNU Privacy Guard(GnuPG或GPG)是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG是自由软件，遵循IETF订定的OpenPGP技术标准设计，并与PGP保持兼容。\n为什么要提交签名commit 众所周知，Git的提交只需要自己的邮箱和密码，这就出现了一个漏洞： 只要他人有你的用户名和邮箱，就可以进行提交，就可以更改你的仓库内容。\n一个典型的案例： https://spencerwoo.com/blog/wait-this-is-not-my-commit\n阅前须知 阅读本教程，默认您拥有一定的git基础 本教程环境为 Ubuntu22.04 创建PGP密钥 使用下列命令来创建一个属于你的密钥对\n1 gpg --full-generate-key 在密钥种类处：选择默认 RSA and DSA 即可; 在密钥长度选项处：选择 4096 bits; 在密钥过期时间处：按照自己的需要选择，建议避免永不过期； 在我们的用户 ID和邮箱处：常用用户名，并填入 GitHub 上面认证过的邮箱; 最后，为密钥设置一个安全的密码，并一定记住这一密码。(当然你也可以不设置直接回车。不过不建议) 这样，我们就拥有了一个属于自己的密钥对 查看并上传密钥到github 使用下列命令来查看密钥\n1 gpg --list-secret-keys --keyid-format LONG 其输出应该像这样(Comes from there)\n1 2 3 4 5 6 /home/spencer/.gnupg/pubring.kbx -------------------------------- sec rsa4096/24CD550268849CA0 2020-08-29 [SC] 9433E1B6807DE7C15E20DC3B24CD550268849CA0 uid [ultimate] Spencer Woo (My GPG key) \u0026lt;my@email.com\u0026gt; ssb rsa4096/EB754D2B2409E9FE 2020-08-29 [E] 其中，第一行的 RSA4096 后的 24CD550268849CA0 为你的PGP指纹。请妥善保存它(后面会用到)。 接着我们需要告诉 GitHub 我们使用的 GPG 公钥。 使用下面的命令即可导出我们的 GPG 公钥\n1 gpg --armor --export [你的指纹] 接着将输出(他应该长这样)\n1 2 3 -----BEGIN PGP PUBLIC KEY BLOCK----- dasSJDsiiiaF...... -----END PGP PUBLIC KEY BLOCK--- 粘贴到 此处，并保存。\n使用git签名commit 使用如下命令，就可以完成本操作。(此命令会开启所有commit全部签名，如果不需要请查阅后文)\n1 2 git config --global user.signingkey [你的指纹] git config --global commit.gpgsign true 如需单次签名 使用git commit命令时，在结尾加入-S参数，即：\n1 git commit -S -m \u0026#34;commit注释\u0026#34; 完成 完成上述步骤后进行一次提交，即可看见自己的commit上有了Verified的绿色标签(如果不行，你可以找谷歌爸爸~~(手动狗头)~~)\n","date":"2023-12-31T00:00:00Z","image":"https://blog.highp.ing/p/pgptogithub/01d3dd5d4b60d4a8012187f4bf8003.jpg@2o_hu5438825b9b6d1014226d20d231e650c2_814630_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/pgptogithub/","title":"使用pgp向github提交签名commit"},{"content":"如何让 Google 快速收录你的网站 / 提升在 Google 的排名 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 针对于小型站点（博客）站长来说，让自己的内容更多人看见是主要的工作之一\n所以本文会教你如何快速提升在 Google 中你的网站的排名\n本文会以本博客为例子\n1.申请收录 这一 Part 相信大部分站长都完成了，如果你还未完成的话\n可以找到 Google Search Console 来完成谷歌收录设置\n2.Sitemap 什么是 Sitemap Sitemap 是收集了一个站点中所有 URL 的文本文件\n比如我的站点的 Sitemap 链接就是 https://c1oudf1are.link/zh-cn/sitemap.xml\n一般情况下生成 Sitemap 一般的，如果你使用博客生成工具(Hugo/Hexo等) 或 WordPress 等由 PHP 编写的博客程序，都会自动化地生成本站对应的 Sitemap\n你可以在有关于博客站点主题，各种 Readme 中找到你的站点的 Sitemap\nSitemap 可以让 Google 更好地爬取你的网站\n此方法非常方便，博客程序一般会定期生成你的 Sitemap\n使用各种工具生成 Sitemap 当你的博客程序没有提供 Sitemap 生成服务时，可以使用该方法\n你可以在 Google 搜索到各种在线生成 Sitemap 的工具\n生成完之后，请将导出的 Sitemap 放置到你博客的任何一个目录下\n要求就是，可以用你的博客域名访问的范围，比如上文中提到的 https://c1oudf1are.link/zh-cn/sitemap.xml\n请注意，如果你的博客发生了变动（比如新增文章），需要重新生成\n向 Google 提交 Sitemap 在侧边栏-编制索引-站点地图中\n输入站点地图 URL 后即可完成提交\n3.访问速度以及优化 PageSpeed Insights Google 会参考用户的体验来进行排序，因此一个好的界面以及访问速度至关重要！\nGoogle 的核心排名系统旨在奖励那些提供良好网页体验的内容。Search Console 针对您可能希望考虑的两个方面提供相关报告：Core Web Vitals 和 HTTPS。不过，网页体验并不只是涉及这两个方面。\n你可以通过 Google 官方工具 PageSpeed Insights 来检测你的网站的得分\n一般来说，得分 95+ 的网站优化已经顶破天了，无需继续优化\n得分 85+ 的网站可能需要一些小小的优化，但是并没有很大必要\n在测评下方有对于你网站的优化建议\n可以参考 Google 给出的建议，进一步加速你的网站\n需要注意优化的地方 服务器本身延迟 从客户端至服务器本身的延迟如果很高，那么得分不可能好到哪里去\n如果你是纯 HTML站长，可以考虑使用 CloudFlare Pages 或 Github Pages，既无需服务器，延迟也还不错\n如果你是拥有自己服务器并搭建站点的站长，肯定需要一台线路、配置等各方面足够好的机器\n如果你是CDN用户，请注意配置合适的缓存规则，避免源站负载过大以及不必要的请求。\n图片 图片是博客等项目的重头\n如果你的机器带宽过小（1M-50M），则应配置站外图床\n这里推荐一个稳定且免费的图床：https://png.cm\n优点就是上传时自动转换成 Webp 格式（PageSpeed Insights 中提醒的使用新一代图片文件格式就是 Webp）\n而且，一个页面内如果有过多图片，也会降低用户体验，降低测试分数\nPHP 如今，大部分博客已经都是 PHP 应用了\nPHP 博客有其优点，当然也有少许缺点\nPHP 有一个至今绕不开的难题\n占用过高 请求界面时需要运算 无法真正做到全缓存 这几点使 PHP 博客需要一台至少 4c4g 的站机才算足够\n所以，如果你有一定技术能力，可以像我一样，部署一个纯 HTML 博客\n我个人使用的是 Hugo，当然也有其他类似的选择\nHTTPS HTTPS 也是 Google 所看重的内容之一，相信开启 HTTPS 对于各位站长来说还是不难的，不赘述了\n小结 大概就这些重头戏，其他优化可以不管，这几个优化完了保证分数上85\n其他需要注意的地方 刚提交给 Google 时 注意：第一次提交给 Google 时并不会马上就收录，大约要等待 2-3 天左右\n当收录了你的站点时，请手动将博客文章地址输入到 Search Console 中的搜索框内\n这样会让 Google 查询你输入的网址是否已经收录，一般是没有的\n然后点击请求编入索引\n这样就可以手动让 Google 收录网址了\n刚开始，需要一篇篇博客手动收录！\n等稳定后提交 等你的博客稳定，并定期有内容产出的时候\nGoogle 就会定期从 Sitemap 中查找还没添加的 Url，进行编入索引\n这样就可以不用理会 Google Search Console 了！\n稳定你的博客 稳定博客一般需要半年左右的时间，每个月发点文章\n而且不要频繁更换页面主体（比如换主题），长期稳定后就可以等候排名慢慢提升\n虽然本文的标题是快速提升在 Google 的排名，但是莫要心急，没有好内容产出是没有用的！\n总结 本文阐述了我自己所用的方法，相信各位站长能快速提升自己 Google 排名\n也欢迎各位站长来和我交换友链！\n发送邮件至 genshinminecraft#duck.com 或 Telegram:@C1oudF1are 来交换友链吧！\n","date":"2023-12-18T00:00:00Z","image":"https://blog.highp.ing/p/googlepaiming/image-6_hu50316e0d1fec334779019ec2d8547438_58497_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/googlepaiming/","title":"如何让 Google 快速收录你的网站 / 提升在 Google 的排名"},{"content":"2023年底总结！ 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n今年注定是我人生中比较重要的一年\n可能本文并没有什么能够帮助你的地方，但是也是我自己对待生活的一个态度，（可以看作我的胡乱发言\n学习方面 学习嘛～～，我今年九月份 从小学六年级成长为了一名初中生（畜生）\n并且在没有努力的情况下，期中得了个年级第十七\n我个人感觉还是非常满意的，顺利进入了 尖子班（癫子班）\n十二月初的全校月考，因为有一定的复习时间，所以进步了点（\n个人感觉初一的学习压力不是很明显，估计下学期就有所体现了\n设备方面 几乎全家的网络设备都是在今年购入的，比如R4s、J3455等\n主要是在 TG 圈子摸爬滚打了一下，家里没点服务器都不敢与动不动就homelab的群友交流了\n价格挺美丽的，钱包隐隐作痛\nR4s: 580RMB J3455: 150RMB(?) 其他的不说了，都是小玩意\n健康与体育 还是一如既往的羽毛球，感觉今年技术没啥长进，就那样把\n学校的运动会也是没参加，但是锻炼了臂力（指的是扛着超重相机机身＋300mm长焦镜头跑来跑去拍照，拍完两天手酸死了）\n最大的挑战 可能就是12月月考语文试卷，满分70分我考49，服了，最差的一次语文\n这也坚定了我以后绝对不碰文科！\n爱与被爱 可能初一讲这话题不对，但是这里的爱指的是爱慕，也许真的有几个女生对我有好感吧（自恋\n当然，作为一个男性同胞，对女生有点好感怎么你了（\nI LOVE YOU, CHJ\n明年的目标和愿望 首先第一的，身体健康，没话说 第二是整台好点的笔记本：那 红米 pro 15 锐龙版 是真的不咋地，打个gta都不得行，必须上点科技与狠活 第三是换台路由器，并全家升级2500m：这个实现稍微有点困难，困难就难在我家预装网线仅超六类，很傻逼。所以只能无线了，而且目前全家没有一个网口是2500m的，很考验钱包 第四，在 TG 认识更多新朋友！我个人比较乐观的，欢迎致电 @C1oudF1are 小结 在写这篇文章的时候，还有15天就到 2024 了\n这也是本博客 2023 最后一篇博客\n就这样吧，没什么好说的\n预祝各位新年快乐！\nGLAD TO MEET YOU! 2024!\n","date":"2023-12-17T00:00:00Z","image":"https://blog.highp.ing/p/2023zongjie/TUAPI-EEES-CC--1250773564_hue6f92a40d7a4fb7cc0d874102e708ef6_228317_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/2023zongjie/","title":"我的 2023 年度总结！"},{"content":"HomeCloud 家庭云 折腾心得 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 作为一个 新时代网络人，在家里放几台小机器，运行一下内网服务，还是非常 INTERESTING 的～～\n所以本文会介绍，有哪些服务值得在内网运行，以及家用低功耗服务器的选择，具有一定的参考价值，也包含一些个人的主观评价！\nMy Servers \u0026amp; Network Devices 首先来列个表\nRedmi AX6s Friendly ELEC Nano Pi R4s J3455 小主机 来一个个介绍 Redmi AX6s 这是我家里的主要网关设备，在我没有 R4s 之前当作我的 路由+路由代理 设备\n现在主要当作 无线AP 和 主要路由设备，但并不进行拨号（shanbing运营商不给光猫超密）\n拨号由运营商光猫进行，对外网可以跑到 970Mbps 的速度，千兆宽带这样可以了\n安装了 Openwrt 系统，仅用于 DHCP 与 DNS 和 NAT转发\n（还有个 Alist 以及内网所有 FRP\n就是很普通的 Router 一个！\nFriendly ELEC Nano Pi R4s 这是我家里的主要服务器设备，用于各种7788的服务\n运行了一个 Clash 内核作为网络代理（非路由代理，非强制）\n其余的等会在介绍 （别问为什么要写这么长的名字，为了装逼，其实 R4s 就行\n基础配置：Arm64 6c4g \u0026amp; 64G SDCard \u0026amp; 32G USB Disk \u0026amp; 64G USB Disk\n系统：Ubuntu 20.04\nJ3455 小主机 这个。。。 不好说是什么设备，应该与 R4s 差不多，都是服务器\n运行了需要大储存大硬盘的服务，很爽\n基础配置：Inter J3455 4c4g \u0026amp; 120G SSD \u0026amp; 320G HDD x2\n系统：Ubuntu 22.04\nRedmi AX6s 服务 Frpc 很好理解吧？Frp 是一个简易的内网穿透服务，可以轻易地将内网端口穿透至公网\n目前，我使用的公共 Frp 服务为 OpenFrp\n对于这 OpenFrp，也来讲一下：它是免费的，公共的 Frps 服务器，提供了全球各地的 Frps 服务器，每一位注册用户可以使用每日签到来获取流量，共计可开4条通道。（需实名）\n并且，其还有自行制作的 Frpc 客户端，可以使用 API令牌(Token) 更方便连接至其服务器！\n请注意，Frp 服务区分 Frpc 以及 Frps，前者为客户端，后者为服务端\n一般来说，仅需要使用 Frpc 即可\nAlist Alist 是一个适合部署于自己服务器上的网盘聚合文件列表应用，其将数十个服务商的网盘服务整合起来，提供网页访问或 Webdav 服务，一般用于存储影视等流媒体资源，还是挺不错的\n关于在本博客上关于 Alist 的文章，请点击前字查看！\n搭建过程很简单，就不教程了\n对于 Alist 的使用上，我一般配合 Rclone 进行使用，对于 Rclone 的各文章，请参阅本博客的 Rclone Tag 食用\n对于网盘选择，这篇文章已经介绍的很清楚了！\n但不妨我再说一次：Onedrive + 夸克！\nOnedrive 用于储存一些备份内容，夸克因为其可以转存 BT 磁力的特性，很适合用来当影视盘！\n但是还是要根据自身的经济情况等来选择！\nR4s 服务 说到 R4s，运行的服务就多了，不急，慢慢来\nFullTclash FullTclash 是一个 基于clash 核心运作的、进行全量订阅测试的telegram机器人（官方原话）\n听不懂？简单来说就是测速 Telegram 机器人\n其作用，有的人很需要，有的人其实没什么需要\n对于其搭建方法，本博客就有\n其实现在的 FullTclash 已经十分先进了，由于本博客的教程有点久远(23.08)\n所以现在来贴上最新版本测试的结果：\n碉堡了！ （雷总音\n挺好玩的，就是上手配置难度稍高，不适合小白进行搭建，有需要可联系我的 Telegram无偿教程！\nCloudflare Tunnel Cloudflare Tunnel 是 CF 家的内网穿透服务，但是其并不是 Frp，是 Cloudflare Warp 与 Zero Trust 的一部分\nCloudflare Tunnel 有如下的优点：\n无限隧道：对于目前互联网上公共的 Frp 服务来说，CF 给的还是很厉害的 无限流量：这个就厉害了，很牛逼 配置简单：官方给你一键命令，连进程守护都可以根据系统自动配置 与 Cloudflare 深度绑定：与 Cloudflare 其他服务深度绑定，比如域名等直接一键配置 本博客也有关于 Cloudflare Tunnel 的教程：There\n总结还是那句话：Cloudflare 大爹永远是你大爹！\n但是其也有缺点：\n在国内直连访问 Cloudflare 服务，稍微有些卡 仅支持 HTTPS(TCP,WSS) 隧道出口到公网，其他协议(Belike SSH,RDP)等需要在客户端配置客户端才可正常使用！ 1Panel 1Panel 是新一代的 Linux 服务器运维管理面板（官方原话）\n之所以选择 1Panel 而不选择 其他类似于 宝塔 等面板，主要还是因为其使用 Docker 进行服务部署\n不管是 HTTP(Nginx/OpenResty)，还是 PHP，又或是其他的 Docker 服务 都一同集成在一个面板上！\n而宝塔等面板，一般直接是安装在主系统上\n由于内网，所以服务稍微有点多，而且不想让环境太乱\n所以全部使用 Docker 进行管理才是最有效的方法！\n也有非常多的基于 Docker 的应用 而其他，对于服务器的管理，还是非常有帮助的\nR4s 中所有的网站均由其管理\u0026amp;反代\nGitea 也就是本文章的头图 （真的是想不到拿什么玩意当topic了 Gitea 是一个开源的 Git 服务，提供类似于 GitHub 的体验，但是其更私有化。且由 Go 语言进行开发，这确保了其快速的根本！\n可以看到，与 GitHub 十分相似，他也提供了大部分等同于 GitHub 的体验，比如：\n兼容 GitHub 的 Workflow Runner(GitHub 叫 Action) CI/CD 支持 SSH 验证服务 HTTP API 令牌验证服务 \u0026hellip;\u0026hellip; 还有更多的功能，等待你去使用！\nMusic163bot 闲的无聊整了个 Music163bot-Go\n用处就是在 Telegram 上创建一个可以获取网易云音乐的 Bot\n官方 Bot 为：@Music163bot\n我自建 Bot 为：@gxwzbot\n说实话没啥用，获取高音质音乐还需要网易云音乐会员，但是确实挺好玩~~（不是吗\nPS: 图中音乐为尼康战歌 《Welcome Home》\nMiaospeed Miaospeed 是一个基于 Clash 用于测试网络代理服务商的后端，前端即为大家所熟知的 Miaoko\n可以说，Miaoko 与上边提到的 FullTclash 为同一种东西，但是其不开源\n我在 R4s 搭建俩测速平台也是为了对接不同的测速 Bot 这玩意没啥好说的，就只是列出来而已（\nYesPlayMusic YesPlayMusic 是一个高颜值的第三方网易云播放器（官方原话）\n为了体现他的高颜值，先来几张图：\n其支持的平台有:\nWindows Linux MacOS Web 其与近期发布了 v2.0.0 alpha 版本，大更新了一次，可以在 Release 找到\nv2.0.0 版本与上面的截图大不相同，请自行安装看看效果！\nPS: v2.0.0 版本暂无 Web 版\nOneNav OneNav 是一个开源免费的书签管理工具，采用了 PHP+SQLite3，并且支持 Chrome 浏览器插件，与浏览器原生兼容。\n我采用的 PHP 环境为：由 1Panel 安装的 OpenResty+PHP8\n我所采用的 OneNav 主题：Dark\n我用其作为我的浏览器启动页，提供了资源索引的服务，美中不足的就是 没有搜索栏\n小结 你可以看到，我用 R4s 所运行的服务这么这么多\n但是以上所有的服务火力全开，占用也很低\n这是以上的服务全部都在运行的情况（甚至还有一些没有写在这里的项目）\n可以看到 CPU 占用仅 1%\n内存仅用了 800M 不到\nUptime 大约 1.00\n所以，作为一个 6c4g(6 线程 4g 内存) 的低功耗服务器，性能还是非常强劲的\n点评：家里没有家里云的(副歌除外)无脑入，R4s/R2s 都行\nR4s 能耗比太牛逼了，跑上面那堆玩意功耗不过8w\n注意：R4s 当主路由(Openwrt)实在是有点浪费，建议起步就 Ubuntu 好了！\n还有，R4s的 1G 版本真心不建议买，性价比不好，跑几个服务就满了\n4G 刚刚好差不多，1G 实在是有点。。。不好评价\nJ3455 小主机 服务 其实，不论按照什么资格来说，J3455 这机器都是不应该拿来做 HomeCloud 的\n因为单纯从 J3455 这个 CPU 的 TDP 10W 看起来，都不是啥省电的料\n但是，我只不过是在家里云缺少一台 x86 架构的机器而已（\n（虽然现在基本啥软件预编译都有 Linux-Arm64 了，但是还是对于 x86 有点执着，不用就不安心\n（冷知识：这是我家唯一一台 x86 设备wwwwwwwwwwwwwwwww\n1Panel 额，这玩意好像在上面的 R4s 中介绍过了，但是并不妨碍我直接复制过来（\n真就复制过来了，不介绍了，懒！\n每台服务器都要部署一次，有点麻烦呢（\n我绝对不会告诉你这是复制的 1Panel 是新一代的 Linux 服务器运维管理面板（官方原话）\n之所以选择 1Panel 而不选择 其他类似于 宝塔 等面板，主要还是因为其使用 Docker 进行服务部署\n不管是 HTTP(Nginx/OpenResty)，还是 PHP，又或是其他的 Docker 服务 都一同集成在一个面板上！\n而宝塔等面板，一般直接是安装在主系统上\n由于内网，所以服务稍微有点多，而且不想让环境太乱\n所以全部使用 Docker 进行管理才是最有效的方法！\n也有非常多的基于 Docker 的应用 而其他，对于服务器的管理，还是非常有帮助的\nJ3455 中所有的网站均由其管理\u0026amp;反代\nNavidrome 这就是我在 J3455 小主机上部署的的重头之一，占用了我的至少300G空间 （硬盘：I am NOT FREE\nNavidrome 是一个自托管式的，开源的，免费的自建流媒体音乐服务（定语是不是有点多了\n它兼容与 Subsonic API，也就意味着用于 Subsonic 的客户端都可以使用！\n话不多说，先来看看他 Web 的表现（客户端的在下面） 额，说实话，他的 Web 端表现的真的不是很惊艳，甚至感觉很丑\n不过好在他兼容 Subsonic，可以自由地配置客户端\n下面是安卓客户端 Symfonium：\nNavidrome 的部署方法也在本博客中，详情请点击这里\n你知道吗：在家部署一个歌曲音质超好的音乐云，真的很爽\nqbittorrent 都说了是 HomeCloud，所以 BT Download 能缺席吗？\nqbittorrent 是一款开源的网络资源下载工具，可支持的类型包括 HTTP、BT 等\n我在本机上使用的 qbittorrent 版本为 qbittorrent-nox\n因为其安装非常简单，保活也非常简单，并且使用 Web 界面作为访问面板，很符合这种没有 Display 的机器\n安装有多简单呢？一条命令搞定！（Debian系列）\n1 apt install qbittorrent-nox 保活有多简单呢？也是一条命令搞定！\n1 qbittorrent-nox -d 随后，就可以在 http://IP:8080 访问了！\nTips: 请不要在上面的 URL 后加上 '/'，否则会提示 Unauthorized（奇怪的 Bugs 增加了\n默认的帐号密码均为 admin，请根据需要修改\n用户界面比较简单，仔细研究五分钟就能使用（其实和客户端版 qbittorrent 有啥区别啊 小结 其实有关于 J3455 的介绍没多少，主要运行的都是需要大存储的服务\n可以看成一个小型的轻量NAS，考虑在后期增加更多硬盘\n总结 好了，一个个都介绍完了，得益于 R4s\u0026amp;J3455 的存在，使我家里的各种服务都发挥出了很好的作用\n也在这里点一下对于 HomeCloud 的平民版选购指南：\nArm 架构首选友善的 Nano Pi 系列，全系列的价格都很亲民，而且性能较好（也可以考虑二手） x86 架构首选 N100 这类小型主机，TDP 越小越好 存储方面，如非 BT/流媒体 等方面需求，普通 HomeCloud 1T 完全足够 接上一条，硬盘无需太高的级别，普通 500G/1T SATA HDD 已经顶天了 ","date":"2023-12-04T00:00:00Z","image":"https://blog.highp.ing/p/homecloud/IMG_20231126_121332_584_hudad6c46779871adc6fa6420f39d139dd_94796_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/homecloud/","title":"HomeCloud 家庭云 折腾心得"},{"content":"Navidrome 家庭音乐云 | 从入门到入土 前言 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n注：本文为 Ubuntu 22.04 系统环境，Debian 系列可照抄\nNavidrome是一个自托管(Self-Hosted)、低占用、兼容Subsonic的开源音乐流媒体服务，常被用于家庭云、NAS等内网服务器上。\n与其他自建流媒体服务的比较： Plex: 开源，没话说 Emby: 开源，没话说 Jellyfin: Jellyfin 一般来说是影视服务器，而且占用很高，不适合运用在单纯音乐云的环境下 Subsonic: 这么古老的东西你还在用？ Airsonic: 开源版Subsonic，长得差不多，也挺古老 先来看看所需要的东西： 脑子 机器一台（需要拥有足够的硬盘，如无硬盘可用Alist挂载网盘等代替，详见这里和那里 一个音乐平台账号（本文用 Netease 网易云音乐 CVIP 做演示） 会使用 音乐 Metadata 编辑器（之所以用网易云因为自带 Metadata，不用自己找了） 请注意：最重要的还是硬盘，一般来说一首无损flac轻轻松松150M以上，所以对于一般人歌单300首歌曲来说，一个50G的空间还是要有的\n安装Navidrome 请使用root用户执行下列的命令!\n顺序执行下列命令：\n1 2 3 4 5 6 7 8 9 10 apt install ffmpeg sudo install -d -o `whoami` -g `whoami` /opt/navidrome sudo install -d -o `whoami` -g `whoami` /var/lib/navidrome # 请自行从 https://github.com/navidrome/navidrome/releases 获取最新的版本以及你机器所对应的架构，替换下面的下载链接 sudo wget https://github.com/navidrome/navidrome/releases/download/v0.50.1/navidrome_0.50.1_linux_amd64.tar.gz -O Navidrome.tar.gz bash sudo tar -xvzf Navidrome.tar.gz -C /opt/navidrome/ sudo chown -R `whoami`:`whoami` /opt/navidrome 然后用你喜欢的编辑器打开(没有就新建) /var/lib/navidrome/navidrome.toml\n1 2 MusicFolder = \u0026#34;/music\u0026#34; Port = 4533 请自行修改 音乐目录 和 端口号，一般的，Navidrome 的端口号默认为4533\n然后，再用你喜欢的编辑器打开(没有就新建) /etc/systemd/system/navidrome.service\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 [Unit] Description=Navidrome Music Server and Streamer compatible with Subsonic/Airsonic After=remote-fs.target network.target AssertPathExists=/var/lib/navidrome [Install] WantedBy=multi-user.target [Service] User=root Group=root Type=simple ExecStart=/opt/navidrome/navidrome --configfile \u0026#34;/var/lib/navidrome/navidrome.toml\u0026#34; WorkingDirectory=/var/lib/navidrome TimeoutStopSec=20 KillMode=process Restart=on-failure DevicePolicy=closed NoNewPrivileges=yes PrivateTmp=yes PrivateUsers=yes ProtectControlGroups=yes ProtectKernelModules=yes ProtectKernelTunables=yes RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6 RestrictNamespaces=yes RestrictRealtime=yes SystemCallFilter=~@clock @debug @module @mount @obsolete @reboot @setuid @swap ReadWritePaths=/var/lib/navidrome ProtectSystem=full 或直接使用下列命令来快速完成配置:\n1 wget -O /etc/systemd/system/navidrome.service https://c1oudf1are.link/navidrome/navidrome.service 随后，即可使用systemctl来管理 Navidrome 了！\n1 2 3 4 5 6 7 systemctl daemon-reload #重载服务 systemctl start navidrome.service #启动服务 systemctl stop navidrome.service #关闭服务 systemctl status navidrome.service #查看日志 systemctl enable navidrome.service #开启开机自启动 systemctl disable navidrome.service #关闭开机自启动 随后，在浏览器内访问 http://IP:PORT 查看，请注意放行 本机防火墙与服务商面板防火墙 （如果有）\n然后整个账号就行了！\n获取音乐 虽然但是，这应该是自建音乐服务都要做的，但是我还是顺便提一下网易云获取Metadata\n为什么要选择网易云呢，是因为网易云下载下来的 NCM 文件包含Metadata，而QQ音乐等一众音乐平台的自有音乐格式都是没有Metadata\n什么是Metadata： Metadata，中文名元数据 一般来说，一个音乐文件仅包含音乐就可以 正常播放 而 Metadata 是包含在音乐文件内的 歌曲详细数据 包括但不限于：\n歌曲名（非文件名） 歌手 专辑 专辑图片 歌曲图片 歌词 专辑序号 年代（时间） 而 Navidrome 会自动搜索歌曲的 Metadata ，用于展示歌曲信息 如： 这些就是自动从 Metadata 中检索出来的数据 而如果没有 Metadata，就会导致不美观，且无法正确检索音乐信息，无法正确分类与排序歌曲 转换 在网易云客户端内下载所需要的音乐，会发现某些是 NCM 后缀名的文件 我们这个时候就要找到一个 NCM to MP3/FLAC 的工具\n经过我的测试，仅有来自 crmmc 的这一项目可以正确完全地转换 NCM 文件\n由于其 Release 的文件比较古早，所以本文采用自行编译的方法：\n1 2 3 apt install golang go get nqdumpgo go build -ldflags=\u0026#34;-w -s\u0026#34; 在Windows下为nqdumpgo.exe 在Linux下为nqdumpgo\n将在本地下载的音乐上传到与 nqdumpgo同级的目录下\n1 2 3 4 . ├── music │ └── xxx.ncm └── nqdumpgo 然后输入\n1 ./nqdumpgo ./music 稍等一下，音乐便自动转换完成！ 转换出来的音乐与 NCM 文件同目录，可使用 cd music/ \u0026amp;\u0026amp; rm -rf *.ncm *.NCM 来清理已经转换了的音乐文件\n然后再将其移动到原先在 navidrome.toml 中设定的 MusicFolder 目录下\n大功告成！\n初步设置 Navidrome 通过 systemctl start navidrome 打开 Navidrome 后，在浏览器访问你所设置的 IP 与 Port，如出现设置管理员界面即为成功 在右上角-个性化设置项中，可以调整自己喜欢的主题与界面语言等，还可以和其他流媒体音乐平台进行互通，不过一般来说，比较不常使用 Navidrome 是一个多用户的系统，每个账号都有独自的喜欢列表，歌单等，我们可以在用户设置项中管理帐号，包括但不限于：新增账号、管理帐号、修改密码等 其实好像在 Homecloud 没啥用（ 还有一个设置项叫做转码，需要 FFmpeg 的支持，一般来说不太会用到，可以自行研究\n客户端 选择 由于开源和**兼容Subsonic的特性，所以我们只要选择可以连接到Subsonic/Airsonic**的客户端即可！\n在安卓平台下，我一般会选择\n音流 挺新的一个客户端，界面颜值还不错 Symfonium 个人目前在使用的，整体体验还算不错(需付费) Windows\nsonixd Github上 开源的一个兼容 Subsonic 播放器，颜值尚可，并且还在持续更新 Web 界面 其实后台开一个浏览器听歌也不是不行（ 其他平台就自行翻找咯，可以到 Github 的这个 Topic 看看！\n客户端连接到服务器 这个每个客户端都不一样，不过大同小异 找到有 Subsonic/Airsonic/Navidrome 等字样的按钮\n只需要提供以下的信息即可：\n地址 (eg. http://192.168.11.127:4533/) 账号 密码 其他的就是补充或辅助说明，一般不需要填写 然后就可以尽情享用这自建 Navidrome 了！\nShut on Android Symfonium ","date":"2023-11-25T00:00:00Z","image":"https://blog.highp.ing/p/navidrome/42e63ef0-8e1e-44e3-a7d2-4eafda8ba256_18c0978d2ac.png","permalink":"https://blog.highp.ing/p/navidrome/","title":"Navidrome 家庭音乐云 | 从入门到入土"},{"content":"锐评CloudFlare（CloudFlare从来都不是减速器） 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\nCloudFlare越来越慢了，CloudFlare哪里慢了，这么多年都是这个速度，好吧不要睁着眼睛乱说，全球CDN很难的。\n而且CloudFlare真的不是随便给你做CDN的品牌欸，我跟CF跟了多少年，他怎么被你们滥用的我是最知道的一个人，他都差点把他们家掏给GFW了，差点CloudFlare姓China了，真的乱说。\n这么多年都是免费的，哪里慢了（很好用的），注册个账号就送你各种可以滥用的服务。\n有的时候找找自己的原因，这么多年了GFW有没有高，好不？\n这么多年了都是这个服务，我真的快疯掉了。\n首发于 https://t.me/aries_init/6083\n","date":"2023-10-02T00:00:00Z","image":"https://blog.highp.ing/p/ruipingcloudflare/OIP-C_hu5594f6a93fce13ab1ca36d4bd54cbd5d_8179_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/ruipingcloudflare/","title":"锐评CloudFlare（CloudFlare从来都不是减速器）"},{"content":"🎵音乐推荐🎵 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 虽然说是音乐推荐，其实就是我的歌单啦！\n我的口味很复杂，啥歌曲都听\n下面推荐的也是我每天单曲循环必备的音乐\n在每一首歌曲的下方都会配上试听链接与个人评价，很主观向的哦！\n推荐 You Broke Me First \u0026ldquo;You broke me first, oh\u0026rdquo;\n《You Broke Me First》是加拿大歌手Tate McRae创作的一首歌。是一位好友将其发在一个群内，听完马上感到舒适的歌曲\n很适合单曲循环，比如我写这篇博客的时候就在循环\n而且，他还有一种BUFF加成神奇的功效：单曲循环时让你干啥效率都变高！\n这也是我每天不听这首歌就难受的原因\n所以，你应该知道为什么本文的副标题为You Broke Me First YYDS!了吧\n试听链接：\nhttps://blog.highp.ing/p/greatmusic/YouBrokeMeFirst.mp3\n凄美地 \u0026ldquo;嘿 等我找到你\n试探你眼睛\n心无旁骛地 相拥\n那是我 仅有的温柔也是我爱你的原因\u0026rdquo;\n《凄美地》我相信你们都应该听过，毕竟是近期短视频的网红歌曲，是郭顶创作的一首收录于《飞行器的执行周期》的歌曲\n不知道怎么评价，总之算是华语里面比较好听也比较耐听的了\n也是我听过次数最多的中文歌，没有之一\n试听链接：\nhttps://blog.highp.ing/p/greatmusic/凄美地.mp3\nPS：《飞行器的执行周期》里面的歌曲都挺好听的，譬如《水星记》，与《凄美地》齐名\n僕らの手には何もないけど、 (儘管我們的手中一無所有) 很好听的一首治愈系歌曲，出自RAM WIRE\n治愈死我了\n说来第一次听见这首歌，还是填词\n当年菜鸟：https://www.mcbbs.net/forum.php?mod=viewthread\u0026tid=942232\n一首MC拜年祭的曲子，原曲就是《僕らの手には何もないけど》\n试听链接：\n《僕らの手には何もないけど》：https://www.youtube.com/watch?v=TXpGWhdwXuo\u0026list=WL\u0026index=15\n《当年菜鸟》：https://blog.highp.ing/p/greatmusic/当年菜鸟.mp3\n都选C 为梦想灼伤了自己\n也不要平庸的喘息\n我要的并不在这里\n你给的答案没意义\n《都选C》是由赵英俊作词作曲，大鹏演唱的歌曲，歌曲电影MV由缝纫机乐队演唱\n它出自于电影《缝纫机乐队》的音乐，我很喜欢这部电影，更喜欢里面的这首歌\n这首歌曲，里面致敬了很多摇滚乐团以摇滚音乐：\n前奏和主歌部分伴奏是涅槃的《come as you are》； 副歌部分伴奏采用的是枪花的《Sweet Child O‘ Mine》； 间奏和尾奏的riff是林肯公园的《paper cut》。 其作词也是非常厉害的，毕竟是赵英俊写的。\n它的电影也是很好看的，讲的摇滚，可以去看一下啦！\n再次缅怀赵英俊！\n试听链接：https://www.youtube.com/watch?v=7vgE9WHYf8M\n未完待洗 小结 这个列表将会永远更新，一直存放我喜欢的歌曲，也可以不定期来看一眼，补充一下自己的音乐列表！\n","date":"2023-09-27T00:00:00Z","image":"https://blog.highp.ing/p/greatmusic/image_hue39244dae781a15905adcd3e5f04386b_1544127_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/greatmusic/","title":"🎵音乐推荐🎵"},{"content":"总结一下\u0026quot;QQ小学生\u0026quot;的特点 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n本文含有非常个人的主观评价，请酌情观看！\n前言 本文仅仅只是我无聊的时候突发奇想写的，没有对任何人进行攻击，请勿对号入座！\n如有雷同，不关我事！\n我曾经也是一名QQ小学生，所以基本上都是亲身经历，保证真实！\nQQ小学生的定义：没技术自大的\u0026quot;小学生\u0026quot;(也有可能是初高中)，经常不懂装懂\n1. Minecraft 不知道为什么，现在感觉玩Minecraft这款游戏就感觉比人高人一等，虽然这款游戏的确很好玩，但是他的生态已经完全被QQ小学生搞乱了\n当然，喜欢玩这款游戏还是可以理解的\n我也是友军，友军别误伤！\n2. FRP \u0026amp; Minecraft Server 许多的QQ小学生热衷于搭建Minecraft的服务器，但是基本上没什么人玩。\n而在家搭建Minecraft Server的时候，经常就会使用FRP内网穿透\n比较著名的有 SakuraFRP/Openfrp\n什么\n1 java -jar xxx.jar 之类的命令早已熟记于心\n3. 虚拟空间/服务器(VPS) QQ小学生们总是对这有关于网站的东西比较喜爱\n经常用他们搭建博客/网盘之类的\n但基本上都是三分钟热度\n在折腾过后基本没有什么实际效果\n4. 无Linux基础知识 他们有一个很显著的特点：几乎处处依靠图形化\n离开了图形化就不能活一样\n也完全没有Linux基础知识\n对于Linux基础认知仅停留在Kali这种嗨客等\n也完全没有自己解决问题的能力，看到英文报错就到处问人/百度\n5. 免费！ 不论是VPS，还是虚拟主机，大多数的QQ小学生都会选择免费的服务。\n其实主要是他们作为学生没有多大的购买能力，也不会将钱财花在这一方面\n其中就以雨云作为大多数的QQ小学生首选\n其因为免费服务吸引众多的无技术能力的人购买\n当然也有其他的一些服务商，不再列举！\n总结 QQ小学生其实说好也不好，说坏也不坏，它主要代表着互联网低龄化\n所以我对于QQ小学生的评价是：当乐子看\n","date":"2023-09-14T00:00:00Z","image":"https://blog.highp.ing/p/qqpupil/qq_hue9155e393a905727bb983bee974754b2_62029_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/qqpupil/","title":"总结一下\"QQ小学生\"的特点"},{"content":"安卓设备安装Google框架方法汇总(持续更新) 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 目前，国内手机不内置GMS已经是常态，转而使用自家的生态以及服务。\n但是总有人需要Google框架进行使用，所以就有了以下的安装方法。\n请注意，本文教的是货真价实的Google框架，不是MicroG这种非官方服务！\n还有，不root或从Recovery刷入安装的Google框架基本是废的，大多数情况为xxxx 已停止运行，无法使用！\n一般来说，一个完整可以运行的Google框架至少需要包含以下三件东西：\nGoogle Services Framework Google Play services Google Play Store 这三件东西缺一不可，且在新版本无法使用默认的软件包管理器进行安装至/data目录下！\n所以，请在Root/刷入第三方Recovery的情况下再查阅以下的文章！\n第一种方法：Gapps (Recovery) 按道理来讲，使用第三方Recovery刷入Gapps是最稳定也是最快捷的方法，但是这一方法需要系统的/system分区拥有足够的空间，但手机普遍可以刷入一个最小的pico\n1. 寻找适合你的Gapps版本 可以按照下面的表格寻找适合你的Gapps版本：(本表来源于Gapps)\n\u0026mdash;\u0026mdash;\u0026ndash;分界线\u0026mdash;\u0026mdash;\u0026ndash;\nLegend Description X Installs application by default O Replaces the Stock/AOSP version of the application by default + Only installed if Google Calendar is NOT installed 4.4 Application is installed on Android 4.4 only 7.1 Application is installed on Android 7.1 only Application Name gapps-config keyword p\ni\nc\no n\na\nn\no m\ni\nc\nr\no m\ni\nn\ni f\nu\nl\nl s\nt\no\nc\nk s\nu\np\ne\nr Google Play Services X X X X X X X Google Play Store X X X X X X X Google System Base X X X X X X X Android Auto stub⁵ GearheadStub X X X X X X X Google Calendar Sync CalSync X X + + + + + Dialer Framework DialerFramework X X X X X X X Google Text-to-Speech GoogleTTS X X X X X O O Google Package Installer PackageInstallerGoogle O O O O O O O Sounds SoundPicker X X X X X X Device Health Services BatteryUsage X X X X X X Google Markup Markup X X X X X X Google App (Search) Search X X X X X X Offline Speech Files Speech X X X X X X Google Digital Wellbeing Wellbeing X X X X X X Actions Services² ActionsServices X X X X X Google Calendar¹ CalendarGoogle O O O O O Google Exchange Services¹ ExchangeGoogle O O O O O Gmail Gmail X X X O O Google Now Launcher² GoogleNow 4.4 4.4 4.4 4.4 4.4 Pixel Icons PixelIcons 7.1 7.1 7.1 7.1 7.1 Pixel Launcher² PixelLauncher O O O O O Google Wallpapers Wallpapers O O O O O Google Calculator¹ CalculatorGoogle O O O O Carrier Services CarrierServices X X X X Google Clock¹ ClockGoogle O O O O Google Maps Maps X X X X Google Messages¹ Messenger O O O O Google Photos Photos X X O O Google Tags¹ TagGoogle O O O O YouTube YouTube X X X X Google Play Books Books X X X Google Chrome⁴ Chrome X O O Cloud Print CloudPrint X X X Google Drive Drive X X X Google Keep Notes Keep X X X Google Play Movies \u0026amp; TV Movies X X X Google Play Music Music X X X Google News Newsstand X X X Google Play Games PlayGames X X X Google Accessibility Suite TalkBack X X X Google Recorder Recorder X X X Android Auto AndroidAuto X X Google Camera¹ CameraGoogle O O Google Contacts¹ ContactsGoogle O O Google Phone² DialerGoogle X X Google Duo Duo X X Google Pay GooglePay X X Google Keyboard¹ KeyboardGoogle O O Google Print Recommendation Service PrintServiceGoogle O O Google Smart Storage StorageManagerGoogle O O Google Translate Translate X X Google VR Services VRService X X Android System Webview¹⁴ WebViewGoogle WebViewStub³ O O Better Together BetterTogether X Google Apps Device Policy DMAgent X Google Docs Docs X Google Earth Earth X Google Fit Fitness X Google Connectivity Services GCS X Google Hangouts Hangouts X Google Indic Keyboard Indic X Google Japanese Input Japanese X Google Korean Input Korean X Google Pinyin Input Pinyin X Project Fi² ProjectFi X Google Sheets Sheets X Google Slides Slides X Google Street View Street X Google Zhuyin Input Zhuyin X \u0026mdash;\u0026mdash;\u0026ndash;分界线\u0026mdash;\u0026mdash;\u0026ndash;\n一般来说，选择pico/nano/micro版本已经足够，更大的版本不仅是/system装不下，而且也很多冗余的物品！\n2.下载你所需版本的刷机包 前往着一个网址：https://opengapps.org/\n在图中选择你设备的架构(一般为ARM64)、安卓版本、你所需要的Gapps的版本\n然后点击下方的下载图标，就可以跳转到\u0026lt;sourceforge.net\u0026gt;进行下载了！\n3.从第三方Recovery刷入(例TWRP) 由于Rec模式不好截图，这里就用文本描述！\n重启至Recovery，按照普通方式在安装/Install模式下选择保存在手机内的Gappsxxx.zip即可！\n4.重启 享受谷歌服务 刷入完成后重启即可，一开机就会发现有标准的谷歌服务以及套件了！\n第二种方法：LiteGapps (Magisk模块) LiteGapps是一个Gapps的分支，其拥有比原版Gapps更小的体积，但是功能也一点没有减少\n其官网为：https://litegapps.site/\nLiteGapps模块在Magisk资源分享网站上有分享，可以通过下面的链接下载模块并安装：\nLiteGapps模块(来自于Magisk资源分享)\n详细的模块安装方法就不介绍了，安装完重启即可享受标准的谷歌服务以及套件！\n附：解决Google Play 设备未获得Play保护机制认证 在一些冷门或是国产设备上使用上述方法安装Google 框架时，会出现Google Play 设备未获得Play保护机制认证这一提示：\n1.安装DeviceID 在 Google Play / Apkpure / 本站 任选一个你可以访问的地址下载\n随后安装并打开即可\n2.获取GSFID 如图，在第二行的Google Service Framework (GSF)中获取你自己设备的独一无二的ID！\n复制保存下来，下一步需要用到！\n3.注册ID 前往 https://www.google.com/android/uncertified/\n登入你的Google账户，并输入你上面获取的GSFID:(图来自知乎)\n点击注册，等待一会即可！\n重置Google Play数据 进入 系统设置-软件-Google Play-储存空间-清除数据 ，确认后重启设备，就可以正常使用Google Play了！\n小结 安装过程挺简单的，希望大家都能用上Google 框架！\n如有问题，可以来 Telegram:@C1oudF1are 找我，免费咨询任何我所知道的问题！\n","date":"2023-09-03T00:00:00Z","image":"https://blog.highp.ing/p/androidinstallgoogle/google_hu3f702e6e1ce3a606711e748c9797982c_21465_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/androidinstallgoogle/","title":"安卓设备安装Google框架方法汇总(持续更新)"},{"content":"松鼠AI学习机V11|SQAIPAD-V11 破解/Root (适用于所有MTK设备) 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\nRoot原文方法链接：https://blog.csdn.net/shenjingwa012/article/details/131018766\n由于原文方法有些过时，且不是描述得很完整，所以撰写这一篇文章\nSQAIPAD-V11的所有分区镜像(不包含userdata)已存放在我的GitHub仓库中，设备的目录树文件也存放于这一GitHub 仓库中\n前言 SQAIPAD-V11是一款《智能ai学习机》，专门骗各位家长购买\n而由于各种政策导致线下店家大批量跑路，留下一块没什么b用的板子\n这篇文章普遍适用于松鼠ai的其他学习机，也适用于所有MTK设备!\n本文以我手上的SQAIPAD-V11作为演示，破解/Root\nSQAIPAD-V11大致配置如下：\nMT6771(Helio p60) 256G+8G Android 10 可以看到性能还是不算差的，而且是MTK平台，可玩性很高\n我们需要准备以下的东西：\n破解：\n脑子和手 Win10+电脑一台 adb驱动 platform-tools Root：\n上面的破解所需东西 fastboot驱动 MediaTek USB VCOM UsbDk Python3.8+ MtkClient 破解(可绕过软件包管理器进行安装，防止应用被卸载) 打开开发者模式 这一步别看很简单，但是，按照寻常的方法是打不开开发者模式的！\n因为系统通过某次OTA升级将开发者模式锁死了，但还是有漏洞绕过的\n首先来到设置中，去设置一个设备锁屏密码，图案/pin均可\n其次直接按照普通方法打开开发者模式即可，就是连续点击版本号多次\n相信这里对玩基佬来说还是轻车熟路的，最后打开ADB调试即可！\n禁用主界面程序(com.boll.tutorialclasslauncher) Win10+电脑在装好驱动并下载好platform-tools后，用数据线将设备连接至电脑\n随后去platform-tools中打开CMD，输入\n1 adb devices 有设备输出即为连接上电脑！\n其次在CMD内输入：\n1 adb shell pm disable-user com.boll.tutorialclasslauncher 注：第一次连接时需要在设备屏幕上验证\n禁用完毕后，点击设备上的Home键*（也就是小圆点）*\n选择Launcher3，就可以到默认的AOSP桌面了！\n安装安装狮并授权 在这里下载安装狮APK：https://blog.highp.ing/p/sqaipad/com.modosa.apkinstaller-3.7.5-42-231938.apk\n通过ADB安装至设备上：\n1 adb install [将下载好的安装狮拖入进来] 稍等几秒钟，就安装好了！\n在设备上打开安装狮，同意各种协议后，回到CMD：\n1 adb shell dpm set-device-owner com.modosa.apkinstaller/.receiver.AdminReceiver 然后在安装狮软件内打开安装狮-DPM的开关\n以后就可以使用安装狮进行安装APK了，绕过了原来的软件包管理器限制！\n完成 最后，再下载一个浏览器的apk，通过ADB安装至设备中，就可以完美使用了！\n正常使用与一般安卓设备无差别，如果不想折腾就可以不用看下去了！\nROOT 重头戏来了！简单的破解安卓肯定不是各位玩基佬的最终目标\n所以我们要Root这块松鼠ai学习机\n由于其标准mtk设备的原因，所以十分好折腾！\n注：玩机有风险，Root需谨慎！ 请先做好备份再折腾！\n请先按照以上的破解方法在开发者模式中打开OEM解锁!\n安装驱动\u0026amp;Python 请先根据前言中的链接安装好MediaTek USB VCOM、UsbDk、Python3.8+\n安装方法基本都是一路下一步\n需要注意的是安装Python时，记得要勾选Add Python to PATH，这样才方便使用！\n安装完上述东西后，重启电脑！\n安装MtkClient以及依赖 从Github Clone/下载zip:https://github.com/bkerler/mtkclient\n如果因为网络问题无法下载，可以选择这一链接\n将其解压到磁盘根目录或非中文路径的地方，在文件夹内打开CMD安装依赖：\n1 2 pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple python setup.py install 安装完依赖后重启电脑！\n使用MtkClient解锁BootLoader 在MtkClient目录下打开CMD：\n1 python mtk da seccfg unlock 出现以下的文本即为已设置好上述依赖/驱动\n1 2 3 4 5 6 7 8 Preloader - Status: Waiting for PreLoader VCOM, please connect mobile Port - Hint: Power off the phone before connecting. For brom mode, press and hold vol up, vol dwn, or all hw buttons and connect usb. For preloader mode, don\u0026#39;t press any hw button and connect usb. If it is already connected and on, hold power for 10 seconds to reset. 这个时候，我们需要事先将设备关机\n之后一边按着设备的三个按键，一边将数据线连接电脑，这一步十分重要！\n之后也要频繁地使用这一方法连接！下文不再赘述！看到此信息时请自觉执行上述步骤！\n此时设备上不会有任何显示，如果出现了开机界面请重试！\n如果按照上述做了之后，CMD窗口内没有其他的反应，持续输出上述文本，说明未成功！\n需要拔掉数据线后再次尝试，如果还无法解决，请按照以下列表排查问题：\n是否安装好了驱动 更换数据线 更换接口 随后开始传输DA，绕过限制解锁BootLoader\n当出现flashext - Successfully wrote seccfg.即为解锁成功！\n断开连接，长按电源键开机，开机界面会有一个Orange State，这样就可以验证为解锁成功了！\n也可以去Fastboot环境下，在platform-tools目录下执行：\n1 fastboot oem lks 返回为0则为成功解锁！\n备份分区（可选） 玩机过程中总有那么几个时候手贱，所以事先备份就很重要了！\n备份全机 备份全机可以使用\n1 python mtk rl mt6771 这样就可以将全机备份在当前目录的mt6771文件夹下了！\n如果一不小心变砖了，可以通过以下命令恢复：\n1 python mtk wl mt6771 其中mt6771是上面备份文件夹名称，可自定义。\n这里的备份会比较久，请勿在备份时断开设备与电脑连接，并确保电脑储存空间足够！\n备份单个分区 备份单个分区可以使用\n1 2 3 python mtk r [分区名] [备份后的文件名] python mtk r boot boot.img python mtk r boot,vbmeta boot.img,vbmeta.img 稍等备份完毕后就可以在路径下找到文件名了！\n提取boot\u0026amp;vbmeta并修补 使用上面的命令，一键提取Boot与vbmeta\n1 python mtk r boot,vbmeta boot.img,vbmeta.img 使用上面破解的方法安装最新版Magisk\n在platform-tools目录下执行\n1 adb push [上面备份的boot.img路径，可直接拖入进来] /sdcard/ 设备打开Magisk，修补内部储存空间中的boot.img\n修补完成后，电脑CMD执行\n1 adb pull /sdcard/Download/[Magisk修补完成后的路径] [本机路径] 将MtkClient下的已修补boot.img改名为boot-magisk.img\n刷入已修补Boot 注：这里可以选择使用Fastboot或MtkClient刷入，本文以Fastboot为例\n将设备重启至BootLoader模式\n在platform-tools目录下执行\n1 adb reboot bootloader 当设备底部显示FASTBOOT MODE时即为成功进入BootLoader\n在platform-tools目录下执行\n1 2 3 4 5 fastboot flashing unlock fastboot flash boot [上面已修补的boot-magisk.img，可直接拖入进来] fastboot --disable-verity --disable-verification flash vbmeta [MtkClient目录下的vbmeta.img.empty，可直接拖入进来] fastboot flashing lock fastboot reboot 设备将重启，重新按照上面破解的方法安装Magisk，启动即可获取到Root权限！\n总结 这一方法可以通杀Mtk设备，当然可以用在松鼠AI学习机上，CSDN的作者使用的是SQAIPAD-Y1，我使用的则是SQAIPAD-V11，经测试都可以使用此方法！\n最后再强调三遍：\n松鼠Ai\u0026amp;栗浩洋 你妈死了 永世不得超生\n松鼠Ai\u0026amp;栗浩洋 你妈死了 永世不得超生\n松鼠Ai\u0026amp;栗浩洋 你妈死了 永世不得超生\n祝所有打着《AI教育》幌子的垃圾企业们 早日倒闭\n祝所有打着《AI教育》幌子的垃圾企业们 早日倒闭\n祝所有打着《AI教育》幌子的垃圾企业们 早日倒闭\n","date":"2023-08-23T00:00:00Z","image":"https://blog.highp.ing/p/sqaipad/image_huece66c896fd2110ca62bafc3bffb4b24_19317_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/sqaipad/","title":"松鼠AI学习机V11|SQAIPAD-V11 破解/Root (适用于所有MTK设备)"},{"content":"FullTclash 搭建/使用方法 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 FullTclash是一个 基于clash 核心运作的、进行全量订阅测试的telegram机器人（官方原话）\n也就是我们平常常说的测速Bot\n其现在已经比较完善，拥有诸多功能，还可以自定义添加新功能！\n因为其开源的特性，任何人均可搭建，无需收取任何费用！\n官方效果图：\n想要搭建FullTclash机器人，你只需要以下的几样东西：\n脑子与手 一个用于搭建的机器（这一机器的地理位置、网络环境带宽、性能配置等决定了测速bot的结果准确性与是否需要连接代理服务器以访问Telegram服务器），推荐使用国内家宽的长期运行设备（软路由等） 一个Socks5代理，用于国内服务器连接Telegram，本机/内网/公网均可（如为国外服务器可忽略此项） 一对Telegram api_id与api_hash，可以在这里获取 一个Telegram Bot Token，可以在Telegram的@BotFather处获取，用于连接机器人 服务器环境要求：\n系统选择Win/Linux/MacOS均可，如架构非x86_64(amd64)可能需要手动编译对应Clash测速内核 Python3.9+（Ubuntu22.04+具有Py3.9+，Debian12+具有Py3.9+，Win/Mac手动选择Py3.9+，其他Linux请自行确认Py3.9+） Pip环境支持（Linux下包名为python3-pip，Win/Mac须在安装时勾选） Git环境支持（Linux下包名为git，Win/Mac自行解决） 安装（以Debian系列Linux为例，Win/MacOS用户可以尝试按照以下方法进行部署，但个别步骤不一样） 安装环境（Win/MacOS自行解决 安装所需要的软件包：\n1 apt install python3 python3-pip wget curl git -y 拉取项目 本项目有master、dev、old三个分支。\nold分支较为老旧，不建议使用；master分支为正式版，日常使用可以选择；dev分支为开发版，具有最新的功能和最好的技术支持，建议选择！\n这篇文章选用dev分支作为演示\n1 git clone -b dev https://github.com/AirportR/FullTclash.git 如果因为众所周知的网络问题在国内无法直接拉取，可以使用下面二选一代理：\n1 2 git clone -b dev https://kgithub.com/AirportR/FullTclash.git git clone -b dev https://ghproxy.com/https://github.com/AirportR/FullTclash.git 安装pip依赖 进入项目\n1 cd FullTclash 安装依赖：\n1 pip3 install -r requirements.txt 如果因为众所周知的网络问题在国内无法直接安装pip依赖，可以使用下面的源：\n1 pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple 稍等片刻（5min）即可完成安装依赖\n修改配置文件 这一步相当的重要！！！！！！！修改配置文件错误可能会导致无法启动！！！！！！！\n首先在项目文件夹内复制config.yaml.example为config.yaml\n1 cp resources/config.yaml.example resources/config.yaml 随后用你喜欢的编辑器打开resources/config.yaml，按照注释修改配置文件\n理论上最简的配置文件为：\n1 2 3 4 5 6 7 8 9 admin: - 12345678 #管理员，此处写你的账户id或用户名，必须配置该项，否则程序会自动退出 bot: api_id: 123456 # Telegram的api_id api_hash: ABCDEFG # Telegram的api_hash bot_token: 123456:ABCDEFG #bot的token proxy: xx.xx.xx.xx:xxxx # 用于连接Telegram服务器的Socks5代理，如网络环境支持可不填写 clash: path: \u0026#39;./bin/fulltclash-linux-amd64\u0026#39; # bin内核的路径，下面会讲到（每个系统默认不同，Linux Amd64可使用默认） 建议先使用上面的模板进行运行成功后，再按照config.yaml.example进行修改/添加！\n添加可执行权限 Win用户可以跳过这一步，除非架构不同 首先查看你电脑的系统与架构 如为Macos Amd64/Windows Amd64/Linux Amd64则可以不用自行编译\n添加可执行文件权限：\n1 chmod +x ./bin/fulltclash-linux-amd64 #如为自编译请检查文件名 编译内核（可选） 如系统/架构非上面的默认，可以自行编译\n详情可以看这一FullTclash附属项目：https://github.com/AirportR/FullTCore\n不论你是否自行编译，是否为默认，都应该进行下面的一步！！\n将编译后的内核复制到项目的bin/目录下，并添加可执行权限（详见上述）\n然后更改配置文件resources/config.yaml中：\n1 2 clash: path: \u0026#39;内核路径，以项目路径写起\u0026#39; FullTclash，启动！ 进行完上述步骤后，就可以开始启动FullTclash了\n请在开始执行前注意以下几点：\nPython版本必须为3.9+ 请确保机器可以连接到Telegram，国内机器可以选择Socks5代理 确保配置文件已存在 确保pip依赖已安装完成 回到项目目录，开始运行：\n1 python3 main.py 看到以下的输出即为完成启动：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 2023-08-12 13:49:24.722 | INFO | utils.cleaner:add_user:1037 - 添加成功 2023-08-12 13:49:25.858 | INFO | utils.cleaner:getBotconfig:804 - 从配置中获取到了api_id 2023-08-12 13:49:25.860 | INFO | utils.cleaner:getBotconfig:806 - 从配置中获取到了api_hash 2023-08-12 13:49:25.861 | INFO | utils.cleaner:getBotconfig:808 - 从配置中获取到了bot_token 2023-08-12 13:49:25.861 | INFO | botmodule.init_bot:\u0026lt;module\u0026gt;:143 - 管理员名单加载:[tgid] 2023-08-12 13:49:25.862 | INFO | botmodule.init_bot:\u0026lt;module\u0026gt;:160 - 当前代理设置为: x.x.x.x:xxxx 2023-08-12 13:49:25.863 | INFO | botmodule.init_bot:\u0026lt;module\u0026gt;:193 - 配置已加载, Telegram bot程序开始运行... 开始启动clash core 接收到的端口数量: 16 已开始在 127.0.0.1:11219 进行socket监听 --- More --- Mixed(http+socks) proxy listening at: 127.0.0.1:11230 --- More --- # --------------------------- [ Start bot AsyncIOScheduler Successful ] ---------------------------- # 2023-08-12 13:49:26.323 | INFO | utils.cleaner:init_addons:221 - 模块即将动态加载: [*xxx*] 2023-08-12 13:49:26.324 | INFO | utils.cleaner:init_addons:222 - 正在尝试获取 \u0026#39;SCRIPT\u0026#39; 属性组件 --- More --- 2023-08-12 13:49:26.326 | INFO | utils.cleaner:init_addons:253 - 已成功加载测试脚本：xxx --- More --- 2023-08-12 13:49:26.822 | INFO | utils.cleaner:init_addons:256 - 外接测试脚本成功导入数量: 60 2023-08-12 13:49:26.829 | INFO | utils.cleaner:init_callback:294 - 权限回调脚本导入数量: 0 2023-08-12 13:49:26.831 | INFO | utils.cleaner:getBotconfig:804 - 从配置中获取到了api_id 2023-08-12 13:49:26.832 | INFO | utils.cleaner:getBotconfig:806 - 从配置中获取到了api_hash 2023-08-12 13:49:26.832 | INFO | utils.cleaner:getBotconfig:808 - 从配置中获取到了bot_token 2023-08-12 13:49:29.222 | INFO | glovar:bot_info:50 - \u0026gt;\u0026gt; Bot Started 2023-08-12 13:49:29.224 | INFO | glovar:bot_info:51 - \u0026gt;\u0026gt; Bot ID: botid Username: @xxx # ---------------------------- [ Start the bot ] ---------------------------- # # ---------------------------- [ Check Bot Successful ] ---------------------------- # 恭喜你，你的Telegram FullTclash Bot已经成功启动，可以去对Bot发送/help以测试功能！\n保活 Windows的保活可以将cmd/powershell放置在后台，不用关闭即可\nMacos保活也可以同Windows一样，将Terminal放置后台\n而对于Linux，则有多种保活方法，这里介绍两种较为通用的方法：\nScreen 方法保活 对于更详细的使用方法，可以查看这一篇站内文章：https://c1oudf1are.link/p/screen/\n其优点是简单并且容易配置，缺点是无法使用开机自启\n简单的命令如下：\n1 2 3 4 5 6 7 8 9 screen -S fulltclash # 在screen环境内输入 python3 main.py # 然后直接关闭Ssh/Terminal即可 # 进入screen环境 screen -d -r fulltclash # 退出也是直接关闭窗口 Systemd 方法保活 注：此方法需要Linux系统使用Systemd作为进程管理服务，普遍的Ubuntu/Debian/Centos已支持，但个别Linux系统（如Openwrt）不支持Systemd）\n首先使用文本编辑器将以下的内容输入至/etc/systemd/system/fulltclash.service中，记得需要更改下方文本中个别字段\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 [Unit] Description=FullTclash Daemon After=network.target [Install] WantedBy=multi-user.target [Service] Type=simple WorkingDirectory=[FullTclash项目的绝对路径] ExecStart=[启动时的命令，命令必须为绝对路径，一般为 /usr/bin/python3 main.py] Restart=always StandardOutput=null StandardError=null 然后可以使用以下的命令启动/停止/重启/查看状态/设置开机自启：\n1 2 3 4 5 6 systemctl start fulltclash # 启动 systemctl stop fulltclash # 停止 systemctl restart fulltclash # 重启 systemctl status fulltclash # 查看运行状态 systemctl enable fulltclash # 设置开机自启 systemctl disable fulltclash # 关闭开机自启 小结 总的来说，FullTclash的配置难度还是十分简单的，没有什么比较困难的部分\n之后还会编写FullTclash的使用方法 摆烂中\n有什么不懂得可以来以下的地方提问哦！\nTelegram FullTclash Group: https://t.me/+gzjSyp_e5ZA3ZjAx Github Project Issues: https://github.com/AirportR/FullTclash/issues 总会有大佬给你解决的啦！\n","date":"2023-08-13T00:00:00Z","image":"https://blog.highp.ing/p/fulltclash/image_hue25eb37f3aa55237956a176ec4fdb169_35665_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/fulltclash/","title":"FullTclash 搭建方法"},{"content":"从Magisk转入Magisk Delta 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 手机端比较完善的root方法就只有Magisk了（Kernelsu暂不讨论）\n但是由于众所周知的原因，Magisk官方版本的Magisk Hide被砍掉了\n所以就有了Magisk Delta的出现\nMagisk Delta总结来说有以下的优点：\n拥有Magisk Hide; Ui改版（个人觉得还不错）; \u0026hellip;（忘了） 安装Magisk Delta 首先去到Github官网，下载app-release.apk\n安装在安卓设备上\n打开就可以授权Root权限并安装Boot了 注：初次进入Magisk Delta也许没有直接安装选项，可以杀死后台再进入Magisk Delta，修复环境后，即可直接安装！\n转移Magisk模块 理论上来说，安装Magisk Delta后，原版Magisk的模块会自动转移到Magisk Delta。各种设置也可以同步！\n但是如果有模块未同步的情况，可以手动添加\n开启Magisk Hide 在右上角设置图标-MagiskHide中，打开MagiskHide与强制使用超级用户列表\n然后重启手机，回到设置中的MagiskHide界面，就可以找到配置超级用户列表\n在里面可以设置需要使用Root权限的应用，可以说是最强劲的隐藏root！\n小结 Magisk Delta是一个还不错的Magisk分支，具有已经被阉割掉的Magisk Hide功能。适合养老使用！\n","date":"2023-07-30T00:00:00Z","image":"https://blog.highp.ing/p/magisk/222942594-63336f63-6a26-492e-a1d1-a356b5f777b3_hu09a75327a2e4900423de0aad85250811_111196_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/magisk/","title":"从Magisk转入Magisk Delta"},{"content":"Nodepanels-一个免费的双平台探针 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 探针是管理并查看服务器状态的重要工具，十分适合网站运维和服务器监视。\n而免费且完全开源无限制的哪吒面板，就是其中的代表。\n但是哪吒面板有诸多的缺点，例如需要自己搭建主端；维护难等问题。\n所以就会出现Nodepanels这一新型探针，它有以下的优点\n无需自己搭建主端 支持Linux/Windows一键脚本搭建探针端 免费版有5个服务器的额度 在线管理服务器（文件管理、性能测试等） 免费官方微信/QQ/Email/TeleGramBot告警通知 可以自定义分享服务器状态 所以说，Nodepanels非常适合服务器少，但是也有管理、监测需求的人！\n你只需要以下的东西：\n脑子和手 一个邮箱 用于挂探针（监测）的服务器（可选） 创建账号 进入到Nodepanels官网 注册一个账号 收完验证码后即可完成注册！\n连接到服务器 登入面板，点击服务器列表左侧的添加服务器 按需选择Linux or Windows\nLinux可以直接复制并在终端执行；\nWindows可以使用cmd/powershell执行。\n执行完成后，刷新界面，在服务器列表下能看见自己的服务器并且显示在线即为添加完成！ 设置服务器（可选） 我们还可以在*Nodepanels中设置服务器\n点击列表的右侧部分来进行对服务器的设置 也可以点击服务器名称，对服务器进行更加详细的监测与调试 这么多功能，就不一一详细讲解了，有需要的朋友可以自行研究这些功能！\n设置告警（可选） 对于一些网站服务器来说，当遭遇攻击时更需要及时地提醒。\n在顶部导航栏的设置-告警设置中，可以使用QQ/微信/邮箱/Telegram/Webhook多种方式进行提醒，只需要把右边的按钮打开即可 点击下面的添加规则，详尽地添加需要告警地条件以及需要告警的服务器，可以做到更有规则地管理 分享服务器状态 我们可以把服务器状态分享炫耀给朋友们看\n在顶部导航栏的设置-分享设置中，可以对需要分享的服务器进行选择，还可以根据需要隐藏信息 然后就会生成一条分享连接，就可以分享给朋友查看啦！\n顺便来炫耀一下我的服务器（偷笑）：GenshinMinecraft 的服务器\n总结 Nodepanels基础的功能就这么多啦，作为日常的探针还是足足够用的。\n对于一些比较懒（belike me）的人，或者是服务器较少的人来说就是不二之选！\n有需要也可以付费支持，在此附上价格表： ","date":"2023-07-24T00:00:00Z","image":"https://blog.highp.ing/p/nodepanels/image-12_hu216a183f3fc2428818c8b9abaaf23757_5145_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/nodepanels/","title":"Nodepanels-一个免费的双平台探针"},{"content":"CloudFlare Tunnel(内网穿透) 获取/使用方法 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 在生活中，我们经常会遇到需要访问家里设备（NAS、Router等）的情况，这个时候如果没有公网IP，将会是十分头疼的一件事情。\n而国内的免费FRP服务有诸多限制，比如带宽小、需实名，还不是很稳定。\n这个时候我们可以选择CloudFlare家的Tunnel服务，既能拥有CloudFlare的全球防护CDN，还可以获得更加安全的体验！\n仅需要以下几样东西即可获取CloudFlare Tunnel的全部功能：\n脑子和手 一个CloudFlare账户 一张银行卡/Paypal（料卡也可） 一台用于穿透的设备（如Router） 创建Tunnel隧道 创建域名前缀 进入CloudFlare管理面板，在左侧栏找到Zero Trust 在此输入你的前缀（喜欢即可，后面可以绑定域名）。\n选择计划并验卡 在这里选择最左侧的0刀计划并继续，随后一路下一步输入自己的卡号信息，即可完成验卡创建。\n创建第一个隧道 回到Zero Trust的主界面 点击左侧的Access-Tunnels 创建Tunnel，点击Create a tunnel 填写名称\n按需下载内网穿透的软件 下一步，填写想连接的域名以及tunnel穿透的协议与目标地址，目标地址可以是本机/内网/公网~~（所以你甚至可以把tunnel当作中转使用）~~ 最后完成创建即可！\n连接到Tunnel隧道 下载好上面所需要的内网穿透软件后，找一个地方放置，并打开终端\n输入在隧道名-Configure下的命令（Linux注意添加可执行权限，以及去掉默认为windows的exe后缀） Linux:\n1 cloudflared service install xxx(一大串Token字符) Windows:\n1 cloudflared.exe service install xxx(一大串Token字符) 然后CloudFlared就会以服务运行，这样就算连接好了Tunnel隧道。\n当隧道名右边的Status变成绿色时，就算连接成功。可以通过上面填写的域名访问来进行验证。\n小结 CloudFlare Tunnel的搭建十分简单，而且可以获得CloudFlare CDN的全球防护，还是免费的。\n可以说是非常良心了，但是还是有一定的缺点，如国内直连访问速度得不到保障等CloudFlare的通病。\n但是也比国内FRP提供商直接给你强制限速10Mbps好！\n并且可以使用与网站优选ip相同的方法，优选Tunnel的ip，可以说是自定义功能十分强大！\n我的大爹，永远都是我的大爹！\n","date":"2023-07-23T00:00:00Z","image":"https://blog.highp.ing/p/cloudflare-tunnel/image_hu9e893a0ded4670dad563da6901e9b022_97042_120x120_fill_box_smart1_3.png","permalink":"https://blog.highp.ing/p/cloudflare-tunnel/","title":"CloudFlare Tunnel(内网穿透) 获取/使用方法"},{"content":"Linux通用保活方式-Screen教程 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 我们都知道，在ssh终端内运行的命令，断开连接后将会快速地被杀死，这才需要我们去使用保活的方法。\n常见的保活方法有很多，如systemd、screen、nohup等。其各有优缺点。我最推荐的是screen，它有以下的优点：\n配置简单 支持在运行时查看日志与输入 稳定保证进程不被杀死（OOM Killer除外） 但是也有一定的缺点：\n无法设置开机自启（也可以使用开机脚本的方式实现） 在screen内运行的程序有可能会被OOM（内存管理系统）杀死 但是还是非常建议在临时或生产力环境使用screen！\n操作 screen的操作十分简单，简单使用仅需要记住四个命令即可！ 注：如果提示命令不存在，请先使用包管理器安装screen！\n创建screen窗口 使用以下命令来创建一个名为Main的窗口并进入：\n1 screen -S Main 在其中运行完需要保活的命令之后，直接关闭终端或者按下Ctrl+A+D退出screen窗口并让命令在里面继续运行。\n进入screen窗口 在screen窗口里面运行完命令退出后如何回到screen窗口里呢？\n1 screen -d -r Main 这样就可以进入一个名为Main的窗口（请确保Main窗口已创建，不然会报错）。可以在里面继续执行命令了！\n列出screen窗口 开的窗口太多了，找不到了怎么办？\n1 screen -ls 这样就可以列出所有的窗口啦！\n退出screen窗口 退出screen窗口有两种方式，第一种是先进入窗口终止程序再退出：\n1 2 3 screen -d -r Main(窗口名) Ctrl+C Ctrl+D 还有一种方式，是通过纯命令行的：\n1 screen -S Main(窗口名) -X quit 进阶玩法 在命令行里创建screen窗口并在里面执行命令 对于在命令行里创建窗口在里面执行命令，是脚本里面最为常见的一个用法：\n1 screen -dmS [窗口名] [命令] 这样就可以创建screen窗口并在里面执行命令，而且不用进入窗口\n前提是这一个命令必须存在！\n执行完毕后就会自动退出窗口，不用自己关闭。\n3.1进阶版 如果我们还想在创建窗口时输入命令，并自动输入命令下的参数呢？\n1 screen -x -S [窗口名] -p 0 -X stuff \u0026#34;命令\u0026#34; \u0026amp;\u0026amp; screen -x -S [窗口名] -p 0 -X stuff $\u0026#39;\\n\u0026#39; 这样就可以在创建窗口后自动输入命令，请注意窗口需要先创建！\n总结 对于一些小型的项目，使用screen保活是最好用的方法，也可以在里面运行一些测试脚本、编译之类的。\n但是请注意机器的内存使用情况，也许会把运行在screen内的大内存进程Killed！\n","date":"2023-07-23T00:00:00Z","image":"https://blog.highp.ing/p/screen/11_hu378d4a1c4c0a17d4ccbcad4ff6237322_37512_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/screen/","title":"Linux通用保活方式-Screen教程"},{"content":"CloudFlare R2 获取/使用方法 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 众所周知，CloudFlare有一个自家的对象存储服务：R2。并且兼容与亚马逊的S3，可以做出许多玩法。\n而CloudFlare出了名的好心，为我们提供了一个免费的额度：\n每月 1,000,000 次 A 类操作 + 每增加 1,000,000 次操收取 US$4.50 每月 10,000,000 次 B 类操作 + 每增加 1,000,000 次操收取 US$0.36 每月 10 GB 存储 + 每增加 1 GB 存储/月收取 US$0.015 而我们仅需要以下的东西就可以得到这10GB对象存储：\n脑子和手 一个CloudFlare账号（最好带有一个用于连接至R2储存桶的域名） 一张银行卡（0刀验证，可以是料） 申请 在此处登入CloudFlare账户，并在左侧导航栏找到R2。 点击中间的激活R2： 点击进入付款详细信息： 输入付款信息，请注意这里并不会有3d验证，只会扣除银行卡里面的0刀用于验证： 一路下一步完成验卡。\n创建储存桶 完成申请并验卡部分后，回到R2界面。 点击创建储存桶： 填写好储存桶的名称，地区建议选择亚太（APAC）： 储存桶使用 创建完成后，可以在R2界面中找到自己刚才创建的储存桶，可以在这里上传/查看/删除文件。\n绑定域名 进入储存桶后，点击 设置-公开访问-自定义域-连接域 来连接自己的域名： 一路下一步即可完成绑定域名。\n创建R2 API 令牌 API令牌是亚马逊S3储存中的鉴权部分，需要手动创建API令牌。\n在R2界面右侧点击 管理R2 API 令牌-创建API 令牌： 按照自己的需求填写好，客户端 IP 地址筛选可不写\n点击创建API令牌即可完成创建访问密钥 ID与机密访问密钥。\n注：访问密钥 ID与机密访问密钥只会显示一次，创建后需注意保存\n案例：挂载至Alist 挂载内容如图下填写： 其中，储存桶是在创建时填写的名称；\nEndpoint是在R2管理界面名称下的链接（记得去掉后面的储存桶名称）；\n访问密钥 ID与安全访问密钥是上面创建的R2 API 令牌；\n地区是在创建时填写的区域后面括号内的字母（如亚太为APAC）。\n这样设置过后，就可以在Alist内使用CloudFlare的R2服务了！\n小结 CloudFlare大家可能都在折腾他的CDN或者ZT tunnel，没有多少人折腾R2服务。其实用免费的R2对接到一些自建的服务上还是很好用的，详细玩法还是可以查看CloudFlareDoc！\nExample： 下面这首歌是储存在CloudFlareR2中的。可以用来做网站图床、音视频调用，自带全球CDN，还不占用机器资源。\nhttps://Vooid.link/YouBrokeMeFirst.mp3\n我的大爹，永远都是我的大爹！\n","date":"2023-07-22T00:00:00Z","image":"https://blog.highp.ing/p/cloudflare-r2/photo_2023-07-22_21-49-10_hu75a7ec911bd9a387d80671413ec46103_4635_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.highp.ing/p/cloudflare-r2/","title":"CloudFlare R2 获取/使用方法"},{"content":"注：此文并非一分钱不花的白嫖类型\n也需要一定的技术能力\nAlist避免踩坑小技巧 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\nPart1：网盘的选择 搭建alist最重要的，就是选好主力网盘\n给大家列出几个网盘以及他的优缺点：\n(斜体为推荐网盘)\n阿里云盘：目前阿里云盘有两种挂载方式，阿里云盘与阿里云盘 Open，但是前者不稳定，后者限制幅度较大。据群友反馈已经低于5mb/s。主力网盘或副网盘都不错，但是目前尚不清楚以后吃相会不会和百度一样。不建议充值会员 百度云盘：大家都知道，百度云盘不开会员约等于不能用，而且302重定向方法有诸多限制。不建议充值会员 115网盘：价格已经算是国内最贵的了（月卡55，年卡500），但是速度与服务都不咋样。不建议充值会员 夸克网盘：最推荐的一个，VIP便宜，还稳定，更可以转存磁力，网上热门磁力直接转存不要太爽！也是我目前用的最多的一个。推荐充值会员 123网盘：网盘本身不错，价格也便宜，但是最近天天修改接口，还有加密签名。可以说在努力地阻止Alist这类挂载。建议先观望 OneDrive：挂载国内版的免费5G没有意义，所以大多数人都是折腾国外的E5。免费的5Tx25个子号。国内速度不错，还可以存色色，是建造公开影视站的首选。建议使用 GoogleDrive：需要国外网络连接，你懂的。之前有无限容量的教育号/公司号，但现在基本已经灭绝，不做推荐。 运营商网盘：可以根据自己的运营商选择对应的运营商网盘：电信天翼云盘，中国移动云盘（和彩云），中国联通云盘。各大运营商云盘对自己家的客户都有免费空间。最为推荐的是中国移动云盘，每月可以领取30G定向流量，不限速，稳定。推荐在自己的运营商网盘充值会员 其余的蓝奏、海外百度Terabox、yandex等由于限制过多，或需要科学，不做推荐。\n平民玩家（不充钱）可以选择阿里云盘以及Onedrive做搭配一起使用 富哥可以选择夸克云盘，便宜超级稳定，百兆轻松跑满 Part2：搭建机器的选择 最推荐的是在家里搭建与Openwrt这种低功耗网络设备上，既可以跑满宽带，还能在内网获得最佳速度。缺点是出门在外也许需要公网ip/内网穿透。 其次是国外大带宽服务器，一些具有好的线路的国外服务器，在国内可以做到延迟很低，比如GCP、AzureJp/Hk/Sg。国外服务器一般拥有1Gbps以上的带宽，在挂载的同时还可以使用aria2下载BT(请注意DMCA)。而在国外服务器上面，建议使用302跳转模式，以获得最佳速度 还有滥用哥折腾玩家最喜欢的容器云，折腾难度较大，但是免费。许多发烧级玩家会使用，但基本不适用于真实生产力环境。 最后是国内服务商的VPS，一是要实名，二是带宽小，三是有监管。本机代理基本无望，只能302。 小结 本文简单地总结了各类可挂载网盘的优缺点，以及搭建机器的选择，对于想要搭建的朋友们来说有些参考意义。\n","date":"2023-07-21T00:00:00Z","image":"https://i2.100024.xyz/2023/07/21/sfr1h3.webp","permalink":"https://blog.highp.ing/p/alist/","title":"Alist避免踩坑小技巧"},{"content":"Rclone挂载以及Fuse问题解决 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 关于Rclone添加储存以及文件复制的问题可以参考这一篇博客：VPSLOG，这里很好地写出了添加储存的过程。本文不再赘述。\n挂载教程 挂载前注意事项： 请确认即将挂载的网盘存在于Rclone的config.conf中； 请确认即将挂载的目录已存在并为空； 请确认使用的机器（VPS,NAS,Router等）能连接到所即将挂载的网盘（如国内机器无法连接谷歌云盘） 确认完之后即可开始挂载！\n基本的挂载命令类似于：\n1 rclone mount 网盘设定名称:网盘内路径 挂载目录 --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 不同的网盘也许有对应的各种选项，但是上面的是通用命令，请查阅官方文档！\n比如我将要挂载一个名为 od 的网盘到 /root/od ：\n1 rclone mount od: /root/od --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 如果报错有关Fuse，请看下面的解决方法\n当需要后台运行rclone挂载时（默认为在终端挂载，且不可停止），可以在挂载命令后加上 --daemon 以作为daemon程序挂载。\n解决Fuse问题 一般报错内容为：\n1 2020/07/17 04:44:20 Fatal error: failed to mount FUSE fs: fusermount: exec: \u0026#34;fusermount\u0026#34;: executable file not found in $PATH 这是因为未安装fuse软件包导致的，解决方法非常简单，使用包管理器安装Fuse：\n1 2 yum install fuse apt install fuse 请根据自己的系统选择对应的包管理器。\n解决已安装Fuse的问题 当以上面的方法安装Fuse之后，如果还发生报错，请执行：\n1 ln /usr/bin/fusermount /usr/bin/fusermount3 因为rclone默认寻找的是fusermount3，而软件包默认安装至fusermount。这条命令将创建一个\u0026quot;快捷方式\u0026quot;，再次运行挂载命令即可。\n","date":"2023-07-21T00:00:00Z","image":"https://blog.highp.ing/p/rclone-fuse/logo_on_light__horizontal_color.svg","permalink":"https://blog.highp.ing/p/rclone-fuse/","title":"Rclone挂载以及Fuse问题解决"},{"content":"提问的智慧🤔 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\nhttps://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md\n提问前 请在提问任何问题前做好以下准备（包括但不限于）：\n脑子 发生问题时的Log，报错，截图 理清发生问题的过程 查询过Google、Bing等搜索引擎 请查阅官网上的文档/faq（如果有） 如为开源项目，请翻阅开源项目的Readme与issue 请确认你的地位（用户/开发者） 提问时 请在提问时做到以下几点（包括但不限于）：\n带上脑子 发送有关这一问题的日志、截图（切勿手机拍电脑屏幕）等可以溯源的东西 语言文明 不要含糊不明地问问题（我的alist有问题，谁来帮我解决一下） 不要不懂装懂（这个我知道······ 提供有关环境的信息（手机/电脑、iOS/Android/Linux/Winndows/Macos···、系统版本、软件版本、配置文件、服务端信息、客户端信息等) 不要连续发问（服务器怎么都不可用；免费vps啥时候可以用；我注册成功了 怎么申请不了服务器；有申请成功的吗） 耐心与为你解决问题的人交流 切勿刷屏 当没有人回复你时，请考虑一下：这个时候是否适合提问，这个地方是否适合提问这一问题。 不要刻意去抬高/踩低某一事物 不要强让他人做某一件事 提问后 对帮助解决问题的人表达感谢，必要时可有偿。\n如果你是回答者 如果你是开发者，请重视每一个用户的反馈，不管是多么离谱也好，多么sb也好。\n如果你是有技术实力的用户，请做到以下几点：\n带上脑子 不要为了装大佬不懂装懂 如果有人遇到了问题，而且你能够解决，请发扬伟大的互联网精神帮助他们 如果你不了解他人的问题，请勿主观地发表观点，也不要在连自己都不知如何做的情况下帮助他人 帮助他人是一种美德，尽力而为而不求回报，也是一种乐趣 总结 互联网生来就是为了解决大家的疑问的。所以，提问与回答的智慧，是维护互联网的重要部分\n","date":"2023-07-21T00:00:00Z","image":"https://blog.highp.ing/p/ask-for-help/ask.svg","permalink":"https://blog.highp.ing/p/ask-for-help/","title":"提问/回答的智慧🤔"},{"content":"免费领取.Link域名一年 本文由 High Ping Network 的小伙伴 GenshinMinecraft 进行编撰，首发于 本博客\n前言 最近大型域名注册商Dynadot推出了一个免费领取.Link域名的活动，现在还有许多短域名/有价值的域名，有需要的朋友可以来领取一下。\n详细信息 链接：https://www.dynadot.com/register-your-free-link-domain 时长：一年 续期费用：3.99刀/9.99刀 时间：-2023.08.31\n教程 进入网站 查询域名 在中间的输入框内输入你想注册的域名的前缀，并点击右边的查询按钮，\n当显示 xxx.link is available时表示此域名可以注册。\n当显示xxx.link is taken或We do not support premium domains for this event.则表示不可注册。\n注册 随后点击下方的Next即可注册，需要先填写Whois所需要的信息。 注：这里所填写的信息不一定需要真实，而且注册域名默认拥有Whois保护。但也不能太离谱，如美国广州省等。推荐使用中国地址生成器：https://www.meiguodizhi.com/cn-address 如注册完看见这一画面，即为注册成功。 验证 回到邮箱，会有一封叫Verify your account email的邮件，点进去验证。\n验证完过后，登录输入安全问题以及生日，即可看到自己的域名。 出现这个画面即为注册.Link域名成功： 解析至CloudFlare 这一步是可选的，但是CloudFlare的功能更加强大。\n关于CloudFlare的使用大家肯定不陌生，在此仅讲一下DynaDot的操作。\n进入域名详情页： 点击下方的DNS Settings\n将选项切换成Name Servers 输入你在CloudFlare的NameServer后点击Save Name Server即可！\n注意！ 注册完域名后，DynaDot会在24小时内给你发送一封名叫Whois Accuracy Verification的邮件，需要点击进去完成Whois验证。\n其实就是打个勾按一下按钮。\n不然你的域名将会在15Days内回收！ 小结 这次的白嫖域名很爽啊，既不用很严格的验证，也不用银行卡验卡。\n朋友们可以使劲薅羊毛了！\n顺便来一下军火展示: ","date":"2023-07-20T00:00:00Z","image":"https://i2.100024.xyz/2023/07/20/10fybfn.webp","permalink":"https://blog.highp.ing/p/freelinkdomain/","title":"免费领取.Link域名一年"}]